<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>eu.ohim.sp</groupId>
	<artifactId>sp-fo-master-pom</artifactId>
	<version>1.0</version>
	<packaging>pom</packaging>

    <name>Software Package BO Master Pom</name>

	<prerequisites>
		<maven>3.0.4</maven>
	</prerequisites>

	<!-- =======================================================================
         Properties ======================================================================= -->
	<properties>

		<jdk.version>1.8</jdk.version>
		<!-- package phase-->
		<maven-resources-plugin.version>3.0.1</maven-resources-plugin.version> 			<!-- LATEST -->
		<!-- compile phase-->
		<maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version> 				<!-- LATEST -->
		<!-- unit test phase -->
		<maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version> 			<!-- LATEST -->
		<!-- integration test phase -->
		<maven-failsafe-plugin.version>${maven-surefire-plugin.version}</maven-failsafe-plugin.version>
		<!-- sonar phase - Never change this version: PowerMock compatible documented in SONAR source
        https://github.com/SonarSource/sonar-examples/blob/master/projects/languages/java/code-coverage/  -->
		<jacoco-maven-plugin.version>0.7.2.201409121644</jacoco-maven-plugin.version>  	<!-- 0.7.2.201409121644 -->
		<!-- clean previous compilation binaries-->
		<maven-clean-plugin.version>3.0.0</maven-clean-plugin.version> 					<!-- LATEST -->
		<!-- copy binary in local repository -->
		<maven-install-plugin.version>2.5.2</maven-install-plugin.version>				<!-- LATEST -->
		<!-- copy binary in remote repository -->
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>  				<!-- LATEST -->
		<!-- other utils -->
		<maven-release-plugin.version>2.5.3</maven-release-plugin.version>   				<!-- LATEST -->
		<maven-assembly-plugin.version>2.6</maven-assembly-plugin.version> 				<!-- LATEST -->
		<maven-war-plugin.version>2.6</maven-war-plugin.version>                 			<!-- LATEST -->
		<versions-maven-plugin.version>2.3</versions-maven-plugin.version> 				<!-- LATEST -->
		<!-- Executing mvn versions:display-plugin-updates indicates that this version and plugin is not specified -->
		<maven-site-plugin.version>3.5.1</maven-site-plugin.version>                       <!-- LATEST -->
		<sonar-maven-plugin.version>3.2</sonar-maven-plugin.version><!-- LATEST -->

		<!-- Surefire and Failsafe plugin command line arguments -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- ===	[Optional] Informative properties :: Required for "About this project" section :: This section is NOT mandatory	===
        There is currently no association between JIRA, Bamboo or SVN through the master-pom
        and should not exist in the future since in a multi provider environment
        the code shouls be portable between different Code repository, JiRA and Bamboo and other CI systems -->

		<!-- [Optional][Generic] Base Urlï¿½s for CI, JIRA and Code repository instances -->
		<!-- Note: Integration between JIRA and Bamboo is performed using "Application Links" OOTB Tools     -->
		<!-- Note: Integration between Bamboo and SVN is performed using "Source code Checkout" OOTB Tool     -->
		<ciServerBaseUrl>http://ci-prod-bamboo-master:8085/bamboo/browse</ciServerBaseUrl>
		<issueServerBaseUrl>https://jira.ohimqaportal.eu/jira/browse</issueServerBaseUrl>
		<euipoPublicSVNBaseUrl>https://svn.oami.europa.eu/svn/emrepo</euipoPublicSVNBaseUrl>
		<euipoPrivateSVNBaseUrl>https://svn-internal.euipo.europa.eu/svn/emrepo</euipoPrivateSVNBaseUrl>

		<!-- [Optional][Specific] Configured to SVN and internal repository for efficiency (avoid public balancer)-->
		<scmProviderPrefix>scm:svn</scmProviderPrefix>
		<scmBaseUrl>${euipoPrivateSVNBaseUrl}</scmBaseUrl>

		<!-- [Optional][Generic] Configured to the selected scm -->
		<scmConnectionBaseUrl>${scmBaseUrl}</scmConnectionBaseUrl>
		<scmDeveloperConnectionBaseUrl>${scmBaseUrl}</scmDeveloperConnectionBaseUrl>
		<scmRepositoryBaseUrl>${scmBaseUrl}</scmRepositoryBaseUrl>

		<!-- [Optional][Specific] Software development projects will extend this values to complete "About this project" section -->
		<jira.project>Unavailable</jira.project>
		<bamboo.project>OHCOM</bamboo.project>
		<!-- Will resolve to eu.ohim.common/ohim-common-master-pom-->
		<scmProjectRelativePath>${project.groupId}/${project.artifactId}</scmProjectRelativePath> <!-- eu.ohim.common/ohim-common-master-pom -->
		<scmProjectBranch>trunk</scmProjectBranch>

		<!--  This properties are kept by documentation purposes: must be set in sonar instance,
              custom values added to sonar-properties in property sonar.exclussions
              <sonar.exclusions.base>
                    **/jaxb/**/*.java, **/wsgen/**/*.java, **/generated-sources/**/*.java, **/vendor/**/*.js
              </sonar.exclusions.base>
          -->
	</properties>
	<!-- =======================================================================
         About this project ( Optional)======================================================================= -->
	<!--  This section is generic and will be completed specifying [jira.project,bamboo.project,scmProjectRelativePath,scmProjectBranch] -->
	<scm>
		<connection>${scmProviderPrefix}:${scmConnectionBaseUrl}/${scmProjectRelativePath}/${scmProjectBranch}</connection>
		<developerConnection>${scmProviderPrefix}:${scmDeveloperConnectionBaseUrl}/${scmProjectRelativePath}/${scmProjectBranch}</developerConnection>
		<url>${scmRepositoryBaseUrl}/${scmProjectRelativePath}</url>
	</scm>
	<issueManagement>
		<system>JIRA</system>
		<url>${issueServerBaseUrl}/${jira.project}</url>
	</issueManagement>
	<ciManagement>
		<system>Atlassian Bamboo</system>
		<url>${ciServerBaseUrl}/${bamboo.project}</url>
	</ciManagement>
	<organization>
		<name>EUIPO</name>
		<url>https://euipo.europa.eu//</url>
	</organization>
	<!-- =======================================================================
         Build ======================================================================= -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<configuration>
					<!-- http://jira.codehaus.org/browse/MRESOURCES-104 -->
					<useDefaultDelimiters>false</useDefaultDelimiters>
					<delimiters>
						<delimiter>${*}</delimiter>
					</delimiters>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<!-- Note: patterns ["**/IT*.java,**/*IT.java","**/*ITCase.java] are included by default
                # http://maven.apache.org/surefire/maven-surefire-plugin/examples/inclusion-exclusion.html -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
			</plugin>
			<!-- Note: patterns [**/Test*.java,**/*Test.java,**/*TestCase.java are] included by default
                 #  http://maven.apache.org/plugins-archives/maven-failsafe-plugin-2.11/examples/inclusion-exclusion.html -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
				<configuration>
					<excludes>
						<exclude>**/SvIT*.java</exclude>
						<exclude>**/*SvIT.java</exclude>
						<exclude>**/*SvITCase.java</exclude>
						<exclude>**/SIT*.java</exclude>
						<exclude>**/*SIT.java</exclude>
						<exclude>**/*SITCase.java</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${maven-clean-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>${maven-install-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${maven-deploy-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven-release-plugin.version}</version>
				<configuration>
					<pushChanges>false</pushChanges>
					<goals>deploy</goals>
					<autoVersionSubmodules>true</autoVersionSubmodules>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${maven-assembly-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven-war-plugin.version}</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>${versions-maven-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${maven-site-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${sonar-maven-plugin.version}</version>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>integration-test</id>
			<!-- [-Pintegration-test] = Will be triggered only if [-Psonar-runner] is not present -->
			<build>
				<plugins>
					<!-- Note: patterns ["**/IT*.java,**/*IT.java","**/*ITCase.java] are included by default # http://maven.apache.org/surefire/maven-surefire-plugin/examples/inclusion-exclusion.html -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${maven-failsafe-plugin.version}</version>
						<configuration>
							<systemProperties>
								<property>
									<name>selenium.server</name>
									<value>${selenium.server}</value>
								</property>
								<property>
									<name>selenium.port</name>
									<value>${selenium.port}</value>
								</property>
								<property>
									<name>app.url</name>
									<value>${app.url}</value>
								</property>
							</systemProperties>
						</configuration>
						<executions>
							<execution>
								<id>default-integration-test</id>
								<goals>
									<goal>integration-test</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sonar-runner</id>
			<!-- [-sonar-runner,integration-test] = [-sonar-runner] #  sonar includes integration test profile by default -->
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.jacoco</groupId>
							<artifactId>jacoco-maven-plugin</artifactId>
							<version>${jacoco-maven-plugin.version}</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<!-- Required to preserve powermock, failsafe plugin declared in profile "integration-test" will not be triggered -->
					<!-- Note: patterns ["**/IT*.java,**/*IT.java","**/*ITCase.java] are included by default
                         # http://maven.apache.org/surefire/maven-surefire-plugin/examples/inclusion-exclusion.html -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${maven-failsafe-plugin.version}</version>
						<executions>
							<execution>
								<id>default-integration-test</id>
								<goals>
									<goal>integration-test</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<configuration>
							<append>true</append>
						</configuration>
						<executions>
							<execution>
								<id>agent-for-ut</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>agent-for-it</id>
								<goals>
									<goal>prepare-agent-integration</goal>
								</goals>
							</execution>
							<execution>
								<id>jacoco-site</id>
								<phase>verify</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>service-integration-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${maven-failsafe-plugin.version}</version>
						<configuration>
							<!-- Note: patterns ["**/IT*.java,**/*IT.java","**/*ITCase.java] are included by default # http://maven.apache.org/surefire/maven-failsafe-plugin/examples/inclusion-exclusion.html -->
							<excludes>
								<exclude>**/IT*.java</exclude>
								<exclude>**/*IT.java</exclude>
								<exclude>**/*ITCase.java</exclude>
							</excludes>
							<!-- specific pattern for service-integration-test -->
							<includes>
								<include>**/SvIT*.java</include>
								<include>**/*SvITCase.java</include>
							</includes>
						</configuration>
						<executions>
							<execution>
								<id>default-integration-test</id>
								<goals>
									<goal>integration-test</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven-surefire-plugin.version}</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>system-integration-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${maven-failsafe-plugin.version}</version>
						<configuration>
							<!-- Note: patterns ["**/IT*.java,**/*IT.java","**/*ITCase.java] are included by default # http://maven.apache.org/surefire/maven-failsafe-plugin/examples/inclusion-exclusion.html -->
							<excludes>
								<exclude>**/IT*.java</exclude>
								<exclude>**/*IT.java</exclude>
								<exclude>**/*ITCase.java</exclude>
							</excludes>
							<!-- specific pattern for system-integration-test -->
							<includes>
								<include>**/SIT*.java</include>
								<include>**/*SITCase.java</include>
							</includes>
							<!-- selenium grid properties are also required -->
							<systemProperties>
								<property>
									<name>selenium.server</name>
									<value>${selenium.server}</value>
								</property>
								<property>
									<name>selenium.port</name>
									<value>${selenium.port}</value>
								</property>
								<property>
									<name>app.url</name>
									<value>${app.url}</value>
								</property>
							</systemProperties>
						</configuration>
						<executions>
							<execution>
								<id>default-integration-test</id>
								<goals>
									<goal>integration-test</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven-surefire-plugin.version}</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<!-- =======================================================================
         Distribution Management ======================================================================= -->
	<!-- http://jira.codehaus.org/browse/MNG-2553 -->
	<distributionManagement>
		<repository>
			<id>releases</id>
			<name>Internal Releases</name>
			<url>${st.releases.url}</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>Internal Snapshots</name>
			<url>${st.snapshots.url}</url>
		</snapshotRepository>
	</distributionManagement>
	<developers>
		<!-- master-pom -->
		<developer>
			<id>JS</id>
			<name>Jose.SIMON</name>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
	</developers>
</project>

		<!-- =======================================================================
               Usage of master-pom from Bamboo  ======================================================================= -->
		<!--
          ## Global variables
            [bamboo.maven.compile.command]   		-U clean compile
            [bamboo.maven.test.command]      		-U clean test                             -Dmaven.test.failure.ignore=true
            [bamboo.maven.install.command]   		-U clean install                          -Dmaven.test.failure.ignore=true
            [bamboo.maven.sonar.runner.command]  	-U clean verify 	-Psonar-runner         -Dmaven.test.failure.ignore=true
          # Note -DperformRelease=true add sources and javadoc
            [bamboo.maven.deliver.command]   		-U clean deploy     -DperformRelease=true  -Dmaven.test.failure.ignore=true
            [bamboo.maven.site.command]     	    -U clean site

            [bamboo.maven.opts]             	MAVEN_OPTS="-Xmx512m -XX:MaxPermSize=128m"
            [bamboo.maven.opts.1024]            MAVEN_OPTS="-Xms256m -Xmx1024m -XX:PermSize=256m -XX:MaxPermSize=1024m"
            [bamboo.maven.opts.2048]            MAVEN_OPTS="-Xms2g   -Xmx2g -XX:PermSize=512m -XX:MaxPermSize=512m"


          ## Bamboo plans (stage - Default Stage - Default Job): Tasks (After Source code checkout):
            #[Compile]
            - Executable:  Maven 3
            - Goal:        ${bamboo.maven.compile.command}
            - Build JDK:   XXXX
            - Environment Variables: ${bamboo.maven.opts}

            #[UnitTest]
            - Executable:  Maven 3
            - Goal:        ${bamboo.maven.test.command}
            - Build JDK:   XXXX
            - Environment Variables: ${bamboo.maven.opts}
            - Where should Bamboo look for the test result files?
              - [X] The build will produce test results.
              - Look in the standard test results directory.

            #[Integration]
            ${bamboo.maven.install.command} -P integration-test
            - Executable:  Maven 3
            - Goal:        ${bamboo.maven.install.command} -P integration-test
            - Build JDK:   XXXX
            - Environment Variables: ${bamboo.maven.opts}
            - Where should Bamboo look for the test result files?
              - [X] The build will produce test results.
              - Look in the standard test results directory.


            #[Sonar-runner]
            - Executable:  Maven 3
            - Goal:        ${bamboo.maven.sonar.command}
            - Build JDK:   XXXX
            - Environment Variables: ${bamboo.maven.opts}
            - Where should Bamboo look for the test result files?
              - [X] The build will produce test results.
              - Look in the standard test results directory.

            #[Deliver]
            # Will add sources and javadoc [-DperformRelease=true]
            - Executable:  Maven 3
            - Goal:        ${bamboo.maven.deliver.command}
            - Build JDK:   XXXX
            - Environment Variables: ${bamboo.maven.opts}
            - Where should Bamboo look for the test result files?
              - [X] The build will produce test results.
              - Look in the standard test results directory.



       -->

		<!--
             Maintenance : mvn versions:display-plugin-updates
        -->