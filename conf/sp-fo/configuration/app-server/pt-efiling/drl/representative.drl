package org.domain.rules;
dialect "mvel"

import java.util.Map;
import java.util.List;
import java.util.ArrayList;
import java.util.HashMap;
import org.apache.commons.lang.StringUtils;
import eu.ohim.sp.core.domain.contact.Email;
import eu.ohim.sp.core.domain.contact.Phone;
import eu.ohim.sp.core.domain.person.PersonKind;
import eu.ohim.sp.core.domain.person.PersonName;
import eu.ohim.sp.core.domain.person.PersonRole;
import eu.ohim.sp.core.domain.validation.ErrorList;
import eu.ohim.sp.core.domain.person.Representative;
import eu.ohim.sp.core.configuration.domain.xsd.Field;
import eu.ohim.sp.core.configuration.domain.xsd.Section;
import eu.ohim.sp.core.domain.validation.RulesInformation;
import eu.ohim.sp.core.domain.person.PersonRoleRelationship;
import eu.ohim.sp.core.domain.person.PersonIdentifier;
import eu.ohim.sp.core.domain.person.PersonRoleRelationKind;
import eu.ohim.sp.core.domain.person.RepresentativeKind;
import eu.ohim.sp.core.domain.contact.Address;

global eu.ohim.sp.core.domain.validation.ErrorList errorList;


rule "BR type - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field )
	Field( id == "type", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative(kind==null)
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if (isSectionValidation == false){
		addError("type", "BRMandatory", "This field is mandatory", null, $errorList);
	}else{
		addError(null, "BR.representative.type.Empty", "The representative type field is mandatory", "mainForm.representativeDataSection", $errorList);
	}

end

//This field is not required in case of (Legal Practitioner(Lawyer) --> Association(Association) ) it is required in the rest of the cases.
rule "BR(natural person) firstName - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "firstName", $fieldUsable : usable, $fieldRequired : required) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative((name != null && StringUtils.isEmpty(name.firstName)) || (name==null))
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("firstName", "BRMandatory", "This field is mandatory", null, $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
		addError(null, "BR.representative.firstName.Emtpy", "The First Name field is mandatory", "mainForm.representativeDataSection", $errorList);
	}
end


rule "BR(natural person)  Middle Name mandatory - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "middleName", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative((name != null && StringUtils.isEmpty(name.middleName)) || (name==null))
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("middleName", "BRMandatory", "This field is mandatory", null, $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
		addError(null, "BR.representative.middleName.Emtpy", "The Middle Name field is mandatory", "mainForm.representativeDataSection", $errorList);
	}

 end

//This field is not required in case of (Legal Practitioner --> Asociation ) it is required in the rest of the cases.
rule "BR(natural person) surname - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "surname", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative((name != null && StringUtils.isEmpty(name.lastName))  || (name==null))
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("surname", "BRMandatory", "This field is mandatory", null, $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
		addError(null, "BR.representative.lastName.Empty", "The Surname field is mandatory", "mainForm.representativeDataSection", $errorList);
	}
end


rule "BR812 (association name mandatory (association))"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "associationName", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative(representativeKind != null && (representativeKind.equals(RepresentativeKind.ASSOCIATION) ||representativeKind.equals(RepresentativeKind.LAWYER_ASSOCIATION)),
	        (name != null && StringUtils.isEmpty(name.organizationName) == true)  || (name==null))
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
    HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");
	if ((imported == false || $validateImport == true) && isSectionValidation == false){
	    addError("associationName", "BRMandatory", "This field is mandatory", null, $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
        addError(null, "BR.representative.address.city.Empty", "The City field is mandatory", "mainForm.personalDataSection", $errorList);
    }
end


rule "BR city - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "address.city", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative(addresses == null || addresses.get(0) == null || (addresses != null && addresses.get(0) != null && (addresses.get(0).city == null || addresses.get(0).city == "")))
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("address.city", "BRMandatory", "This field is mandatory", null, $errorList);
	}else{
		addError(null, "BR.representative.address.city.Empty", "The City field is mandatory", "mainForm.representativeDataSection", $errorList);
	}
end


rule "BR country - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "address.country", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative(addresses == null || addresses.get(0) == null || (addresses.get(0) != null && (addresses.get(0).country==null || addresses.get(0).country == "")))
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("address.country", "BRMandatory", "This field is mandatory", null, $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
		addError(null, "BR.representative.address.country.Empty", "The Country field is mandatory", "mainForm.representativeDataSection", $errorList);
	}

end


rule "BR stateProvince - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "address.stateprovince", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative(addresses == null || addresses.size() == 0 || (addresses != null && addresses.get(0) != null && (addresses.get(0).country == "GB" || addresses.get(0).country =="US") && (addresses.get(0).state == null || addresses.get(0).state == "")))
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("address.stateprovince", "BRMandatory", "This field is mandatory", null, $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
		addError(null, "BR.representative.address.stateProvince.Empty", "The State Province field is mandatory", "mainForm.representativeDataSection", $errorList);
	}

end


rule "BR postal code - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "address.postalCode", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative(addresses == null || addresses.get(0) == null || (addresses != null && (addresses.get(0).postCode == null || addresses.get(0).postCode == "")))
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("address.postalCode", "BRMandatory", "This field is mandatory", null, $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
		addError(null, "BR.representative.address.postalCode.Empty", "The postal code field is mandatory", "mainForm.representativeDataSection", $errorList);
	}

end

rule "BR postal code - Content"
salience 1000
when
    $errorList : ErrorList()
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()))
    Field( id == "address.postalCode", $fieldUsable : usable, $regex : format) from $fields
    eval($fieldUsable == true && StringUtils.isNotEmpty($regex))
    Representative(addresses != null, $addresses : addresses)
    $address : Address(StringUtils.isNotEmpty(postCode) && postCode not matches $regex) from $addresses
    $rulesInformation : RulesInformation($customObjects : customObjects)
then
    HashMap co = $customObjects;
    Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

    if ((imported == false || $validateImport == true) && isSectionValidation == false){
        addError("address.postalCode", "BRFormat", "This field has a bad format", null, $errorList);
    }else if((imported == false || $validateImport == true) && isSectionValidation == true){
        addError(null, "BR.person.address.postalCode.format", "The postal code field has a bad format.", "mainForm.representativeDataSection", $errorList);
    }
end



rule "BR street - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "address.street", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative(addresses == null || addresses.get(0) == null || (addresses != null && (addresses.get(0).street == null || addresses.get(0).street == "")))
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("address.street", "BRMandatory", "This field is mandatory", null, $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
		addError(null, "BR.representative.address.street.Empty", "The Street field is mandatory", "mainForm.representativeDataSection", $errorList);
	}

end

rule "BR house number - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "address.houseNumber", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative(addresses == null || addresses.get(0) == null || (addresses != null && (addresses.get(0).streetNumber == null || addresses.get(0).streetNumber == "")))
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("address.houseNumber", "BRMandatory", "This field is mandatory", null, $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
		addError(null, "BR.representative.address.houseNumber.Empty", "The house number field is mandatory", "mainForm.representativeDataSection", $errorList);
	}

end

//This field is not required in case of (Legal Practitioner --> Asociation ) it is required in the rest of the cases.
rule "BR Nationality - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "nationality", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative($personRoleRelationships : personRoleRelationships,personRoleRelationships == null && (nationality == null || nationality == "Unidentified" || StringUtils.isEmpty(nationality)==true))
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if (isSectionValidation == false){
		addError("nationality",	 "BRMandatory", "This field is mandatory",	 null,	$errorList);
	}else if(isSectionValidation == true){
		addError(null, "BR.representative.nationality.Empty", "The nationality field is mandatory", "mainForm.representativeDataSection", $errorList);
	}

end


rule "BR Phone - Content"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "phone", $fieldUsable : usable, $regex : format, $editableImportField : editableImport) from $fields
	Representative ($phones : phones)
	Phone($phoneKind:phoneKind, $number:number, StringUtils.isNotEmpty(number) && StringUtils.isNotEmpty($regex) && number not matches $regex) from $phones
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ($phoneKind==null || $phoneKind.value()=="Undefined") {
		if ((imported == false || $validateImport == true) && isSectionValidation == false){
			addError("phone", "BRFormat", "This field has a bad format",  null, $errorList);
		}else if((imported == false || $validateImport == true) && isSectionValidation == true){
			addError(null, "BR.representative.phone.Content", "The Phone field has a bad format", "mainForm.representativeDataSection", $errorList);
		}
	}
end


rule "BR Fax - Content"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "fax", $fieldUsable : usable, $regex : format, StringUtils.isEmpty($regex)==false) from $fields
	Representative ($phones : phones)
	Phone($phoneKind:phoneKind,$number:number, StringUtils.isNotEmpty(number) && StringUtils.isNotEmpty($regex) && number not matches $regex) from $phones
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ($phoneKind!=null  && $phoneKind.toString().equals("Fax")) {
		if ((imported == false || $validateImport == true) && isSectionValidation == false){
			addError("fax", "BRFormat", "This field has a bad format",  null, $errorList);
		}else if((imported == false || $validateImport == true) && isSectionValidation == true){
			addError(null, "BR.representative.fax.Format", "The Fax field has a bad format", "mainForm.representativeDataSection", $errorList);
		}
	}
end


rule "BR Email - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "email", $regex : format, $fieldRequired : required, $fieldUsable : usable, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true )
	Representative ($emails : emails, emails == null)
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("email", "BRMandatory", "This field is mandatory", null, $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
		addError(null, "BR.representative.email.Empty", "The Email field is mandatory", "mainForm.representativeDataSection", $errorList);
	}
end

rule "BR Email - Content"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "email", $fieldUsable : usable, $regex : format, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true )
	$person: Representative ($emails : emails, $representativeKind: representativeKind, $personKind: kind)
	Email(emailAddress != null && emailAddress != "" && emailAddress not matches $regex) from $emails
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true || shouldValidateEmail($representativeKind, $personKind)) && isSectionValidation == false){
		addError("email", "BRFormat", "This field has a bad format",  null, $errorList);
	}else if((imported == false || $validateImport == true || shouldValidateEmail($representativeKind, $personKind)) && isSectionValidation == true){
		addError(null, "BR.representative.email.Format", "The Email field has a bad format", "mainForm.representativeDataSection", $errorList);
		addError(null, $person.name.fullName, $person.name.fullName, "mainForm.representativeDataSection", $errorList);
	}
end

function boolean shouldValidateEmail(RepresentativeKind kind, PersonKind personKind){
    if(kind == null || personKind == null){
        return true;
    }
    if(kind == RepresentativeKind.ASSOCIATION ||
        (kind == RepresentativeKind.OTHER &&
            (personKind == PersonKind.LEGAL_ENTITY || personKind == PersonKind.NATURAL_PERSON))){
            return false;
    } else {
        return true;
    }
}

rule "BR(legal entity) organization name mandatory - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "nameOfLegalEntity", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative((name==null) ||(name != null && StringUtils.isEmpty(name.organizationName) == true))
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("nameOfLegalEntity", "BRMandatory", "This field is mandatory", null, $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
		addError(null, "BR.representative.legalEntity.organizationName.Empty", "The Organization Name field is mandatory.", "mainForm.representativeDataSection", $errorList);
	}
end


rule "BR(legal entity) legalForm - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "legalForm", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative((legalForm==null) ||(legalForm != null && StringUtils.isEmpty(legalForm) == true))
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("legalForm", "BRMandatory", "This field is mandatory", null, $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
		addError(null, "BR.representative.legalEntity.legalForm.Empty", "The Legal Form field is mandatory.", "mainForm.representativeDataSection", $errorList);
	}
end

rule "BR(legal entity) organization registration number - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "businessVatNumber", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative(identifiers == null || (identifiers != null && identifiers.size() == 0))
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("businessVatNumber", "BRMandatory", "This field is mandatory", null, $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
		addError("businessVatNumber", "BR.representative.legalEntity.businessVatNumber.Empty", "The organization registration number field is mandatory.", "mainForm.representativeDataSection", $errorList);
	}
end


rule "BR(Correspondence) Name - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "correspondenceAddresses.correspondenceName", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	Representative($addresses : correspondenceAddresses, $addresses != null)
    $address : Address(postalName == null || StringUtils.isEmpty(postalName) == true) from $addresses
	eval($fieldUsable == true && $fieldRequired == true)
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("correspondenceAddresses[" + indexOfObject($addresses, $address) + "].correspondenceName","BRMandatory","This field is mandatory", null, $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
		addError(null, "BR.correspondenceAddresses.correspondenceName.empty", "The correspondence Name field is mandatory", "mainForm.representativeDataSection", $errorList);
	}
end


rule "BR(Correspondence) Street - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "correspondenceAddresses.addressForm.street", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	Representative($addresses : correspondenceAddresses, $addresses != null)
	$address : Address(StringUtils.isEmpty(street) == true) from $addresses
	eval($fieldUsable == true && $fieldRequired == true)
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("correspondenceAddresses[" + indexOfObject($addresses, $address) + "].addressForm.street", "BRMandatory", "This field is mandatory",  null, $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
		addError(null, "BR.correspondenceAddresses.addressForm.street.empty", "The correspondence Street field is mandatory", "mainForm.representativeDataSection", $errorList);
	}
end

rule "BR(Correspondence) House Number - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "correspondenceAddresses.addressForm.houseNumber", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	Representative($addresses : correspondenceAddresses)
	$address : Address(StringUtils.isEmpty(streetNumber) == true) from $addresses
	eval($fieldUsable == true && $fieldRequired == true )
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("correspondenceAddresses[" + indexOfObject($addresses, $address) + "].addressForm.houseNumber", "BRMandatory", "This field is mandatory", null,	 $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
		addError(null, "BR.correspondenceAddresses.addressForm.houseNumber.empty", "The correspondence House Number field is mandatory", "mainForm.representativeDataSection", $errorList);
	}
end


rule "BR(Correspondence) City - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "correspondenceAddresses.addressForm.city", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	Representative($addresses : correspondenceAddresses)
	$address : Address(city == null || StringUtils.isEmpty(city) == true ) from $addresses
	eval($fieldUsable == true && $fieldRequired == true )
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("correspondenceAddresses[" + indexOfObject($addresses, $address) + "].addressForm.city",
				 "BRMandatory", "This field is mandatory", null, $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
		addError(null, "BR.correspondenceAddresses.addressForm.city.empty", "The correspondence City field is mandatory", "mainForm.representativeDataSection", $errorList);
	}
end

rule "BR(Correspondence) Postal Code - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "correspondenceAddresses.addressForm.postalCode", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	Representative($addresses : correspondenceAddresses, $addresses != null)
	$address : Address(postCode == null || StringUtils.isEmpty(postCode) == true) from $addresses
	eval($fieldUsable == true && $fieldRequired == true)
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("correspondenceAddresses[" + indexOfObject($addresses, $address) + "].addressForm.postalCode",
				 "BRMandatory", "This field is mandatory", null, $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
		addError(null, "BR.correspondenceAddresses.addressForm.postalCode.empty", "The correspondence Postal Code field is mandatory", "mainForm.representativeDataSection", $errorList);
	}
end


rule "BR(Correspondence) Country - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section(   $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "correspondenceAddresses.addressForm.country", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	Representative($addresses : correspondenceAddresses, $addresses != null)
	$address : Address(StringUtils.isEmpty(country) == true) from $addresses
	eval($fieldUsable == true && $fieldRequired == true)
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("correspondenceAddresses[" + indexOfObject($addresses, $address) + "].addressForm.country",
				 "BRMandatory",	 "This field is mandatory",	 null, $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
		addError(null, "BR.correspondenceAddresses.addressForm.country.empty", "The correspondence Country field is mandatory", "mainForm.representativeDataSection", $errorList);
	}
end


rule "BR(Correspondence) state province - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section(   $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "correspondenceAddresses.addressForm.stateprovince", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	Representative($addresses : correspondenceAddresses, $addresses != null)
	eval($fieldUsable == true && $fieldRequired == true)
	$address : Address((country == "GB" || country =="US") && state=="") from $addresses
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("correspondenceAddresses[" + indexOfObject($addresses, $address) + "].addressForm.stateprovince",
		"BRMandatory",	 "This field is mandatory", null, $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
		addError(null, "BR.correspondenceAddresses.addressForm.stateprovince.empty", "The correspondence state province field is mandatory", "mainForm.representativeDataSection", $errorList);
	}
end

rule "BR(Correspondence) Email - Content"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "correspondenceAddresses.correspondenceEmail", $fieldUsable : usable, $regex : format, $editableImportField : editableImport) from $fields
	Representative ($correspondenceEmails : correspondenceEmails)
	$emailAddress: Email(StringUtils.isNotEmpty(emailAddress) && StringUtils.isNotEmpty($regex) && emailAddress not matches $regex) from $correspondenceEmails
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("correspondenceAddresses[" + indexOfObject($correspondenceEmails, $emailAddress) + "].correspondenceEmail",
		"BRFormat", "This field has a bad format", null, $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
		addError(null, "BR.correspondenceAddresses.correspondenceEmail.format", "The correspondence Email field has a bad format", "mainForm.representativeDataSection", $errorList);
	}
end

rule "BR(Correspondence) Telephone Number - Content"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "correspondenceAddresses.correspondencePhone", $fieldUsable : usable, $regex : format, $editableImportField : editableImport) from $fields
	Representative ($correspondencePhones : correspondencePhones)
	$phone:Phone($phoneKind:phoneKind, $number:number, StringUtils.isNotEmpty(number) && StringUtils.isNotEmpty($regex) && number not matches $regex) from $correspondencePhones
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("correspondenceAddresses[" + indexOfObject($correspondencePhones, $phone) + "].correspondencePhone",
		 "BRFormat", "This field has a bad format", null, $errorList);
	}else if((imported == false || $validateImport == true) && isSectionValidation == true){
		addError(null, "BR.correspondenceAddresses.correspondencePhone.format", "The correspondence Telephone Number field has a bad format", "mainForm.representativeDataSection", $errorList);
	}
end

rule "BR(employee representative) Name of employee - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "nameOfEmployer", $fieldUsable : usable, $fieldRequired : required) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative(economicConnectionIndicator == true && StringUtils.isEmpty(nameOfEmployer) )
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("nameOfEmployer", "BRMandatory", "This field is mandatory", null, $errorList);
	}
end

rule "BR(employee representative) Nature of Economic Connections - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "natureOfEconomicConnections", $fieldUsable : usable, $fieldRequired : required) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative(economicConnectionIndicator == true && StringUtils.isEmpty(economicConnectionNature) )
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if ((imported == false || $validateImport == true) && isSectionValidation == false){
		addError("natureOfEconomicConnections", "BRMandatory", "This field is mandatory", null, $errorList);
	}
end


rule "BR832 (firstName format (BG nationality))"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport : validateImport)
	$rulesInformation : RulesInformation($customObjects : customObjects )
	Field( id == "firstName", $fieldUsable : usable, $editableImportField : editableImport, $regex: format) from $fields
	Field( id == "nationality", $fieldUsableNationality : usable) from $fields
	eval($fieldUsable && $fieldUsableNationality && StringUtils.isNotEmpty($regex))
	Representative(name != null && StringUtils.isEmpty(name.firstName) == false && nationality != null && nationality == "BG" && name.firstName not matches $regex)
then
    HashMap co = $customObjects;
    Boolean imported = co.get("imported");
    Boolean isSectionValidation = co.get("isSectionValidation");

    if (isSectionValidation == false){
	    addError("firstName", "BRFormat.firstName", "Bad format of first name", null, $errorList);
	} else if(isSectionValidation == true){
        addError(null, "BRFormat.firstName", "Bad format of first name", "mainForm.representativeDataSection", $errorList);
    }
end

rule "BR832 (middleName required (BG nationality))"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()))
	$rulesInformation : RulesInformation($customObjects : customObjects )
	Field( id == "middleName", $fieldUsable : usable, $editableImportField : editableImport, $regex: format) from $fields
	Field( id == "nationality", $fieldUsableNationality : usable) from $fields
	eval($fieldUsable && $fieldUsableNationality)
	Representative(((name != null && StringUtils.isEmpty(name.middleName) == true) || name.middleName == null) && nationality != null && nationality == "BG")
then
    HashMap co = $customObjects;
    Boolean imported = co.get("imported");
    Boolean isSectionValidation = co.get("isSectionValidation");

    if ((imported == false || $validateImport == true) && isSectionValidation == false){
	    addError("middleName", "BRMandatory", "This field is mandatory", null, $errorList);
	} else if((imported == false || $validateImport == true) && isSectionValidation == true){
        addError(null, "BRMandatory", "This field is mandatory", "mainForm.representativeDataSection", $errorList);
    }

end

rule "BR832 (middleName format (BG nationality))"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()))
	$rulesInformation : RulesInformation($customObjects : customObjects )
	Field( id == "middleName", $fieldUsable : usable, $editableImportField : editableImport, $regex: format) from $fields
	Field( id == "nationality", $fieldUsableNationality : usable) from $fields
	eval($fieldUsable && $fieldUsableNationality && StringUtils.isNotEmpty($regex))
	Representative(name != null && StringUtils.isEmpty(name.middleName) == false && nationality != null && nationality == "BG" && name.middleName not matches $regex)
then
    HashMap co = $customObjects;
    Boolean imported = co.get("imported");
    Boolean isSectionValidation = co.get("isSectionValidation");

    if (isSectionValidation == false){
	    addError("middleName", "BRFormat.middleName", "Bad format of middle name", null, $errorList);
	} else if(isSectionValidation == true){
        addError(null, "BRFormat.middleName", "Bad format of middle name", "mainForm.representativeDataSection", $errorList);
    }
end

rule "BR832 (lastName format (BG nationality))"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, $validateImport : validateImport)
	$rulesInformation : RulesInformation($customObjects : customObjects )
	Field( id == "surname", $fieldUsable : usable, $editableImportField : editableImport, $regex: format) from $fields
	Field( id == "nationality", $fieldUsableNationality : usable) from $fields
	eval($fieldUsable && $fieldUsableNationality && StringUtils.isNotEmpty($regex))
	Representative(name != null && StringUtils.isEmpty(name.lastName) == false && nationality != null && nationality == "BG" && name.lastName not matches $regex)
then
    HashMap co = $customObjects;
    Boolean imported = co.get("imported");
    Boolean isSectionValidation = co.get("isSectionValidation");

    if (isSectionValidation == false){
	    addError("surname", "BRFormat.lastName", "Bad format of last name", null, $errorList);
	} else if(isSectionValidation == true){
        addError(null, "BRFormat.lastName", "Bad format of last name", "mainForm.representativeDataSection", $errorList);
    }
end

rule "BR (Company  number depending on country)"
salience 1000
when
    $errorList : ErrorList()
    Section( $fields : field, $validateImport : validateImport)
    $rulesInformation : RulesInformation($customObjects : customObjects )
    Field( id == "nationalOfficialBusinessRegister", $fieldUsable : usable, $editableImportField : editableImport) from $fields
    Field( id == "address.country", $fieldUsableCountry : usable) from $fields
    eval($fieldUsable && $fieldUsableCountry)
    Representative(identifiers != null && addresses != null && addresses.size() >0 && addresses.get(0).country != null && addresses.get(0).country != "BG", $ids: identifiers)
    PersonIdentifier($idKind: identifierKindCode, identifierKindCode != null && identifierKindCode == "Company Number" &&
        value != null && !value.isEmpty()) from $ids
then
    HashMap co = $customObjects;
    Boolean imported = co.get("imported");
    Boolean isSectionValidation = co.get("isSectionValidation");

     if ((imported == false || $validateImport == true) && isSectionValidation == false){
    	addError("nationalOfficialBusinessRegister", "BR.nationalOfficialBusinessRegister.onlyForBG", "This field should be filled only for BG companies", null, $errorList);
    } else if((imported == false || $validateImport == true) && isSectionValidation == true){
        addError(null, "BR.nationalOfficialBusinessRegister.onlyForBG", "This field should be filled only for BG companies", "mainForm.personalDataSection", $errorList);
    }
end

rule "BR (Company  number not valid)"
salience 1000
when
    $errorList : ErrorList()
    Section( $fields : field, $validateImport : validateImport)
    $rulesInformation : RulesInformation($customObjects : customObjects )
    Field( id == "nationalOfficialBusinessRegister", $fieldUsable : usable, $editableImportField : editableImport) from $fields
    eval($fieldUsable)
    Representative(identifiers != null, $ids: identifiers)
    PersonIdentifier($idKind: identifierKindCode, identifierKindCode != null && identifierKindCode == "Company Number" &&
        value != null && !value.isEmpty()) from $ids
then
    HashMap co = $customObjects;
    Boolean imported = co.get("imported");
    Boolean isSectionValidation = co.get("isSectionValidation");
    Boolean companyIdIsValid = co.get("companyIdIsValid");

    if(!companyIdIsValid){
         if ((imported == false || $validateImport == true) && isSectionValidation == false){
            addError("nationalOfficialBusinessRegister", "BR.nationalOfficialBusinessRegister.invalid", "Invalid company id", null, $errorList);
        } else if((imported == false || $validateImport == true) && isSectionValidation == true){
            addError(null, "BR.nationalOfficialBusinessRegister.invalid", "Invalid company id", "mainForm.personalDataSection", $errorList);
        }
    }
end

rule "BR Representative POW validity end date - Content"
salience 1000
when
    $errorList : ErrorList()
    Section( $fields : field)
    Field( id == "powValidityEndDate", $fieldUsable : usable, $editableImportField : editableImport) from $fields
    eval($fieldUsable == true && $editableImportField == true)
    Representative($powValidityEndDate : powValidityEndDate, powValidityEndDate != null)
    $rulesInformation : RulesInformation($customObjects : customObjects)
then
    HashMap co = $customObjects;
	Boolean isSectionValidation = co.get("isSectionValidation");
	Date currentDate = new Date();

	if(currentDate.compareTo($powValidityEndDate) > 0){
        if (isSectionValidation == false){
            addError("powValidityEndDate", "BR.powValidityEndDate", "POW validity date can not be in the past",  null, $errorList);
        }else if(isSectionValidation == true){
            addError(null, "BR.powValidityEndDate", "POW validity date can not be in the past", "mainForm.representativeDataSection", $errorList);
        }
    }
end

rule "BR pow validity end date - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field )
	Field( id == "powValidityEndDate", $fieldUsable : usable ) from $fields
	Field( id == "powValidityIndefiniteIndicator", $fieldIndicatorUsable : usable ) from $fields
	Representative(powValidityEndDate==null && (powValidityIndefiniteIndicator == null || powValidityIndefiniteIndicator == false))
	eval($fieldUsable == true && $fieldIndicatorUsable == true)
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if (isSectionValidation == false){
		addError("powValidityEndDate", "BR.Enter.Date.Or.Select.Indefinite", "This field is mandatory", null, $errorList);
	}
end

rule "BR pow validity end date - NOT Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field )
	Field( id == "powValidityEndDate", $fieldUsable : usable ) from $fields
	Field( id == "powValidityIndefiniteIndicator", $fieldIndicatorUsable : usable ) from $fields
	Representative(powValidityEndDate !=null && (powValidityIndefiniteIndicator != null && powValidityIndefiniteIndicator == true))
	eval($fieldUsable == true && $fieldIndicatorUsable == true)
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if (isSectionValidation == false){
		addError("powValidityEndDate", "BR.Must.Not.Have.Date.For.Indefinite", "You must not fill in validity end date if the POA is indefinite", null, $errorList);
	}
end

rule "BR pow reauthorization indicator"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field )
	Field( id == "powReauthorizationIndicator", $fieldUsable : usable) from $fields
	eval($fieldUsable == true)
	Representative(powReauthorizationIndicator == null)
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if (isSectionValidation == false){
		addError("powReauthorizationIndicator", "BRMandatory.Select.One", "This field is mandatory", null, $errorList);
	}
end