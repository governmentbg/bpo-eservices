package org.domain.rules;

dialect "mvel"

import eu.ohim.sp.core.domain.patent.PatentApplication;
import eu.ohim.sp.core.domain.validation.ErrorCore;
import eu.ohim.sp.core.domain.validation.ErrorList;
import eu.ohim.sp.core.domain.payment.FeeList;
import eu.ohim.sp.core.domain.payment.FeeType;
import eu.ohim.sp.core.domain.payment.Fee;
import java.util.Map;
import java.util.HashMap;
import java.util.TreeMap;
import java.util.List;
import java.util.Date;
import eu.ohim.sp.core.domain.patent.PCT;

rule "Fees reader"
salience 1000
no-loop
    when
		FeeList($feeTypeList : feeTypeList)
        $basicFee : FeeType("basicFee".equals(nameKey)) from $feeTypeList
        $publicationFee : FeeType("publicationFee".equals(nameKey)) from $feeTypeList
    then
    	TreeMap map = new TreeMap();
        map.put("basicFee", $basicFee);
        map.put("publicationFee", $publicationFee);
        insert(map);
end

rule "Basic Fee"
salience 100
no-loop
    when
        $results : HashMap()
        $map : TreeMap()
        PatentApplication(patent != null)
    then

        FeeType feeType =  (FeeType) $map.get("basicFee");
        Fee fee = new Fee();
            fee.setFeeType(feeType);
            fee.setQuantity(1);
            fee.setUnitAmount(feeType.getDefaultValue());
            fee.setAmount(fee.getUnitAmount());
        $results.put("basicFee", fee);

        feeType =  (FeeType) $map.get("publicationFee");
            fee = new Fee();
            fee.setFeeType(feeType);
            fee.setQuantity(1);
            fee.setUnitAmount(feeType.getDefaultValue());
            fee.setAmount(fee.getUnitAmount());
        $results.put("publicationFee", fee);
end