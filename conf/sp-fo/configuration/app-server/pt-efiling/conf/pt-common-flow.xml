<?xml version="1.0" encoding="UTF-8"?>
<flow abstract="true" xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

    <on-start>
        <set name="flowScopeDetails.flowModeId" value="flowRequestContext.activeFlow.id"/>
        <evaluate
                expression="flowBeanAction.loadApplication(requestParameters.form_id, requestParameters.lid)"
                result="flowScope.flowBean" result-type="java.io.Serializable"/>
        <evaluate
                expression="requestParameters.form_id != null ? requestParameters.lid != null : false"
                result="flowScope.loaded" result-type="boolean"/>

        <evaluate expression="flowScope.flowBean.initializationErrorCode" result="flashScope.error_code"/>
        <evaluate expression="flowScope.flowBean.setInitializationErrorCode(null)"/>
        <evaluate expression="requestParameters.timeout" result="flashScope.timeout" result-type="java.io.Serializable" />
        <evaluate expression="(requestParameters.draftId!=null)?'':flowScope.flowBean.setIdreserventity(draftApplicationService.provideProvisionalID())" />
        <!--<evaluate expression="flowScope.flowBean.setDefaultLang()" />-->
    </on-start>

    <view-state id="savetopc" view="externalRedirect:contextRelative:saveToPC.htm?flowKey=#{requestParameters.execution}"/>
    <view-state id="printDraftReceipt" view="externalRedirect:contextRelative:receipt.htm?flowKey=#{requestParameters.execution}"/>
    <view-state id="failureState" view="failureTile" />
    <view-state id="error" view="error_page" model="flowBean" />

    <action-state id="submitted">
        <evaluate result="flowScope.uuid" result-type="java.io.Serializable"
                  expression="draftApplicationService.storeSubmittedApplication(flowBean)" />
        <transition to="download" />
        <transition on-exception="java.lang.Exception" to="review" />
    </action-state>

    <end-state id="download" view="redirect:#{flowScope.redirectToPortal? flowScope.redirectURL : '/submitted.htm'}" >
        <on-entry>
            <evaluate result="flowScope.redirectToPortal" expression="draftApplicationService.redirectToPortal(flowBean)" />
            <evaluate result="flowScope.redirectURL" expression="draftApplicationService.getRedirectUrl(flowScope.flowBean.idreserventity)"/>
        </on-entry>
    </end-state>

    <action-state id="GlobalLogin">
        <secured attributes="Login" />
        <evaluate expression="flowScope.loaded ? null : flowBeanAction.addUserPersonDetails(flowScope.flowBean, flowScope.flowModeId)" result="flowScope.userPersonDetails" />
        <evaluate expression="flowScope.currentState" />
        <transition on="wizhome" to="wizhome" />
        <transition on="wiz0" to="wiz0" />
        <transition on="wiz0p" to="wiz0p" />
        <transition on="wiz0u" to="wiz0u" />
        <transition on="wiz0e" to="wiz0e" />
        <transition on="wiz1e" to="wiz1e" />
        <transition on="wiz1" to="wiz1" />
        <transition on="wiz2e" to="wiz2e" />
        <transition on="wiz2" to="wiz2" />
        <transition on="wiz3" to="wiz3" />
        <transition on="review" to="review" />
    </action-state>

    <global-transitions>
        <transition on="Cancel" validate="false">
            <evaluate expression="flowBean.clear()" />
        </transition>
        <transition on="ChangeLanguage" validate="false">
            <evaluate expression="false" />
        </transition>
        <transition on="importPatentDivisional" validate="false">
            <evaluate
                    expression="importService.getPatentDivisional(flowBean, requestParameters.importId)"
                    result="flowScope.flowBean" />
        </transition>
        <transition on="importUMDivisional" validate="false">
            <evaluate
                    expression="importService.getUMDivisional(flowBean, requestParameters.importId)"
                    result="flowScope.flowBean" />
        </transition>
        <transition on="importSVDivisional" validate="false">
            <evaluate
                    expression="importService.getSVDivisional(flowBean, requestParameters.importId)"
                    result="flowScope.flowBean" />
        </transition>

        <transition on="importTransformationEM" validate="false">
            <evaluate
                    expression="importService.getPatentConversion(flowBean, requestParameters.importId)"
                    result="flowScope.flowBean" />
        </transition>

        <transition on="importTransformationNational" validate="false">
            <evaluate
                    expression="importService.getPatentTransformation(flowBean, requestParameters.importId)"
                    result="flowScope.flowBean" />
        </transition>

        <transition on="importParallelEM" validate="false">
            <evaluate
                    expression="importService.getPatentEUParallel(flowBean, requestParameters.importId)"
                    result="flowScope.flowBean" />
        </transition>

        <transition on="importParallelNational" validate="false">
            <evaluate
                    expression="importService.getPatentNationalParallel(flowBean, requestParameters.importId)"
                    result="flowScope.flowBean" />
        </transition>

        <transition on="clearImportedFromEarlierApp" validate="false">
            <evaluate
                    expression="importService.clearImportedFromEarlierApp(flowBean)"
                    result="flowScope.flowBean" />
        </transition>

        <transition on="importTemplatePatent" validate="false">
            <evaluate
                    expression="importService.getPatentTemplateImport(flowBean, requestParameters.importId, requestParameters.importIdType, requestParameters.forceReimport)"
                    result="flowScope.flowBean" />
        </transition>

        <transition on="changeApplicationKind" validate="false">
            <evaluate
                    expression="flowBeanAction.changeApplicationKind(flowBean)"
                    result="flowScope.flowBean" />
        </transition>

        <transition on="clearPatentTemplateImportedApplicants" validate="false">
            <evaluate
                    expression="importService.clearPatentTemplateImportedApplicants(flowBean)"
                    result="flowScope.flowBean" />
        </transition>

        <transition on="Refresh" validate="false">

        </transition>
        <transition on="SaveLocally" to="savetopc" validate="false" />
        <transition on="PrintDraftReceipt" to="printDraftReceipt" validate="false" />
        <transition on="doPayment" validate="true">
            <secured attributes="Submit_Application" />
            <evaluate expression="true" result="flashScope.doPayment"
                      result-type="java.lang.Boolean" />
        </transition>

        <transition on="doSubmit" to="submitted" history="discard" validate="true">
            <secured attributes="Submit_Application" />
        </transition>

        <transition on="PAYMENT_OK" to="submitted" history="discard" validate="true" />
        <transition on="PAYMENT_CANCELLED" />
        <transition on="PAYMENT_ERROR">
            <evaluate expression="requestParameters.paymentMessage" result="flashScope.paymentMessage"
                      result-type="java.lang.String" />
        </transition>
    </global-transitions>

    <exception-handler bean="spFlowExecutionExceptionHandler"/>
</flow>
