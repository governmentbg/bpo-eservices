package org.domain.rules;
dialect "mvel"

import java.util.List;
import java.util.Date;
import java.util.Map;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Calendar;
import eu.ohim.sp.core.domain.design.Design;
import eu.ohim.sp.core.domain.contact.Phone;
import eu.ohim.sp.core.domain.contact.Email;
import eu.ohim.sp.core.domain.contact.PhoneKind;
import eu.ohim.sp.core.domain.design.DesignView;
import eu.ohim.sp.core.domain.validation.ErrorList;
import eu.ohim.sp.core.domain.design.DesignApplication;
import eu.ohim.sp.core.configuration.domain.xsd.Section;
import eu.ohim.sp.core.configuration.domain.xsd.AvailableSection;
import eu.ohim.sp.core.domain.validation.RulesInformation;
import eu.ohim.sp.core.configuration.domain.country.xsd.Countries;
import org.apache.commons.lang.StringUtils;
import eu.ohim.sp.core.domain.application.Entitlement;
import eu.ohim.sp.core.domain.application.EntitlementKind;
import eu.ohim.sp.core.domain.design.ProductIndication;
import eu.ohim.sp.core.domain.design.ProductIndicationKind;
import eu.ohim.sp.core.domain.design.ProductIndicationClass;
import eu.ohim.sp.core.domain.design.ProductIndicationTerm;
import eu.ohim.sp.core.domain.application.Signatory;
import eu.ohim.sp.core.domain.person.Representative;



rule "BR sections"
salience 2000
when
	$sectionList : ArrayList()
then
	for (Section section : $sectionList){
		//System.out.println ("We have the section: " + section.getCoreName());	
		insert (section);		
	}	
end


rule "BR Number of Applicants"
salience 1000
when
	$errorList : ErrorList()
	DesignApplication(applicants == null || (applicants != null && applicants.size() <= 0))	
	Section (coreName == "applicant_details")
then
	addError(null, "BR.applicant.empty", "At least one Applicant must be filled","mainForm.applicantDataSection", $errorList);
end


rule "BR - Number of Designs"
salience 1000
when
 $errorList : ErrorList()
 DesignApplication(designDetails == null || (designDetails != null && designDetails.size() <= 0))	
 Section (coreName == "designs_details") 
then 
	addError(null, "BR.design.design.emtpy", "You must add at least one design",   "mainForm.designDataSection",   $errorList);    
end


rule "BR At lest one design view for design"
salience 1000
when
 $errorList : ErrorList()
 DesignApplication(designDetails != null , $designDetails : designDetails)
 Design (views == null || (views != null && views.size() <= 0)) from $designDetails
then 
	addError(null, "BR.design.views.empty", "You must add at least one design view for design", "mainForm.designDataSection", $errorList);    
end


rule "BR005 - Every design must have one design view of type 1"
salience 1000
when
 $errorList : ErrorList()
 DesignApplication(designDetails != null , $designDetails : designDetails)
then
	boolean type1 = false;
	boolean searchMore = true;
	for (Design design : $designDetails){
		if(searchMore) {
			type1 = false;
			for (DesignView designView : design.getViews()){
				if (designView != null && designView.getType() != null){
					if (designView.getType().equals("General")) {
						type1 = true;
					}
				}
			}
			if(type1 == false) {
				searchMore = false;
			}
		}
	}
	if (type1 == false){
		addError(null, "BR.design.views",  "You must add at least one design view of type 'General view'",  "mainForm.designDataSection",  $errorList);
	}
end


rule "BR Deferment of publication Date"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field )	
	Field( id == "defermentTillDate", $fieldUsable : usable, $fieldRequired : required) from $fields
	DesignApplication(requestDeferredPublication==true)	
	DesignApplication(designDetails != null , $designDetails : designDetails)
	Section (coreName == "defermentOfPublication_details")
	
then
	Calendar c1 = Calendar.getInstance();
	Calendar c2 = Calendar.getInstance();				
	boolean hasDate = false;
	boolean hasError = false;
	
	for (Design design : $designDetails) {
 	
	 	if (design.getPublicationDefermentTillDate()!=null && !hasError) {
	 	
			c1.add(Calendar.MONTH, 12);
			c2.add(Calendar.HOUR, -24);
			Date date1=c1.getTime();
			Date date2=c2.getTime();
			hasDate = true;
	 		if ((design.getPublicationDefermentTillDate().compareTo(date2)<0) || 
	 			(design.getPublicationDefermentTillDate().compareTo(date1)>0)) {
	 		
	 			addError("mainForm.defermentTillDate", "BR.design.deferredDate", "The date cannot surpass a maximum of 12 months after filing of the application (or date of priority when invoked).","mainForm.defermentofPublicationSection", $errorList);
	 			hasError = true;								 	
	 		}			
		}	 						
	}
	
	if (hasDate == false) {
		addError("mainForm.defermentTillDate", "BRMandatory", "The deferment date field must be filled", "mainForm.defermentofPublicationSection", $errorList);
	}
end

rule "BR Reference - Length"
salience 1000
when
	$errorList : ErrorList()	
	Section( $fields : field, coreName == "reference_details" )	
	Field( id == "mainForm.reference", $regex : format, $fieldUsable : usable, $fieldRequired : required) from $fields
	DesignApplication($reference : reference,   reference != null && StringUtils.isNotEmpty(reference))
then
	if ($reference.length() > 30 ){
		addError("mainForm.reference", "BR.design.reference.Length", "This field has a bad format (30 char max).", "mainForm.designDataSection", $errorList); 	 
	} 	
end

rule "BR Reference - Content"
salience 1000
when
	$errorList : ErrorList()	
	Section( $fields : field, coreName == "reference_details" )	
	Field( id == "mainForm.reference", $regex : format, $fieldUsable : usable, $fieldRequired : required) from $fields
    eval($fieldUsable == true && StringUtils.isNotEmpty($regex))	
	DesignApplication($reference : reference, StringUtils.isEmpty(reference)==false, reference not matches $regex)
then
	addError("mainForm.reference", "BR.design.reference.Format", "The Personal reference field has a bad format.", "mainForm.designDataSection", $errorList); 	 
end


rule "BR First Language - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, coreName == "languages" )
	Field( id == "firstLang", $fieldUsable : usable, $fieldRequired : required) from $fields
	eval($fieldUsable == true && $fieldRequired == true)	
	DesignApplication(applicationLanguage == null || StringUtils.isEmpty(applicationLanguage) )
then
	addError(null,"BR301.FirstLanguage.Empty","The First language field is mandatory","mainForm.languageSection",$errorList); 	 
end



//-----------------------Design View validations when importing design
//--------------------------------------------------------------------

rule "BR Design - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, coreName == "designs_details"  )	
	DesignApplication(designDetails != null , $designDetails : designDetails)	
 	Design($views : views, views == null || (views.size() > 0)) from $designDetails
	DesignView( view == null)	from $views	 	
then
	addError(null,"BR.design.attachment.empty", "The Design View attachment file is mandatory.","mainForm.designDataSection", $errorList); 	 
end

//rule "BR Design Description - Empty "
//salience 1000
//when
//	$errorList : ErrorList()
//	Section( $fields : field, coreName == "designs_details" )
//	DesignApplication(designDetails != null , $designDetails : designDetails)
// 	Design($views : views, views.size() > 0 ) from $designDetails
//	DesignView(description ==null || description == "")	from $views
//then
//	addError(null,"BR.design.description.empty","The Design View description field is mandatory.", "mainForm.designDataSection", $errorList);
//end

rule "BR Product Description - Format"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, coreName == "designs_details"  )	
	Field( id == "mainForm.productDescription", $fieldUsable : usable, $fieldRequired : required, $regex : format) from $fields	
	DesignApplication($productDescription : productDescription, productDescription != null && StringUtils.isNotEmpty(productDescription) )	
then
	if ($productDescription.length() > 1200 ){
		addError("mainForm.productDescription", "BR.design.productDescription.format", "The product description has a bad format (1200 characters max)", null, $errorList);	
	} 	 
end

//rule "BR Design publicationSize - Empty"
//salience 1000
//when
//	$errorList : ErrorList()
//	Section( $fields : field, coreName == "designs_details" )
// 	DesignApplication(designDetails != null , $designDetails : designDetails)
// 	Design($views : views, views.size() > 0 ) from $designDetails
//	DesignView( publicationSize == null || StringUtils.isEmpty(publicationSize))	from $views
//then
//	addError(null,"BR.design.publicationSize.empty","The Design View type publication size field is mandatory.", "mainForm.designDataSection", $errorList);
//end


rule "BR Design View: Type - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field, coreName == "designs_details" )
 	DesignApplication(designDetails != null , $designDetails : designDetails)	
 	Design($views : views, views.size() > 0 ) from $designDetails	
	DesignView(type == null || StringUtils.isEmpty(type)) from $views		
then
	addError(null,	 "BR.design.type.empty","The Design view type field is mandatory.", "mainForm.designDataSection", $errorList); 		 
end


rule "BR Design productIndications - Empty"
salience 1000
when
 	$errorList : ErrorList()
 	DesignApplication(designDetails != null , $designDetails : designDetails)
	Design (productIndications == null || (productIndications != null && (productIndications.size() <= 0 || productIndications.size()>1))) from $designDetails
then
	 addError(null, "BR009.design.proIndication.emptyOrMoreThanOne.perDesign", "You must add exactly one product indication per design",  "mainForm.designDataSection", $errorList);
end

rule "BR Design - Distinct class Product"
salience 1000
when
 	$errorList : ErrorList()
 	$designApp : DesignApplication(designDetails != null , $designDetails : designDetails)
    eval(!checkProductIndicationClasses($designApp))
then
    addErrorWarning(true, "NonBlockingMessage.Split.Application",
            "NonBlockingMessage.Split.Application",
            "mainForm.designDataSection", $errorList);
end

rule "BR Design only one set/composition is allowed"
salience 1000
when
 	$errorList : ErrorList()
 	Section( $fields : field, coreName == "designs_details" )
	$desApp : DesignApplication()
	eval(setCompositionCount($desApp) > 1)
then
	 addError(null, "BR009.design.setComposition.moreThanOne", "You can not have more than one set/composition",  "mainForm.designDataSection", $errorList);
end


rule "BR0 Product Indication - kind - Empty"
salience 1000
when
	$errorList : ErrorList()
	DesignApplication(designDetails != null , $designDetails : designDetails)
	Design (productIndications != null && productIndications.size() > 0, $prodInds : productIndications) from $designDetails
	ProductIndication($kind : kind, kind==null) from $prodInds
then
	addError(null, "BR009.design.proIndication.kind", "You must specify the kind of the product you have added (single or set/composition)", "mainForm.designDataSection", $errorList);
end




rule "BR Design productIndications: Name - Empty"
salience 1000
when
	$errorList : ErrorList()
	DesignApplication(designDetails != null , $designDetails : designDetails)
	Design ($prodInds: productIndications) from $designDetails
	ProductIndication($classes : classes) from $prodInds
	ProductIndicationClass($terms : terms)	from $classes
	ProductIndicationTerm (text == null || StringUtils.isEmpty(text) ) from $terms
then
	addError(null, "BRPNE.product.name.empty", "You have to provide a product name for every product", "mainForm.designDataSection", $errorList);
end


//rule "BRAUTH - Number of Authors"
//salience 1000
//when
//$errorList : ErrorList()
//DesignApplication(designers != null && designers.size() <= 0)
//Section (coreName == "designers_details")
//then
//	addError(null,
//		"BRAUTH.authorsNumber.Empty",
//		"You must add at least one author",
//		"mainForm.designerDataSection",
//		$errorList);
//end


rule "BRCA - Number of Correspondence Addresses"
salience 1000
when
$errorList : ErrorList()
DesignApplication(contactDetails == null || contactDetails.size() == 0)
Section (coreName == "application_ca")
then
	addError(null,
		"BRCA.applicationCANumber.Empty",
		"You must add at least one correspondence address",
		"mainForm.applicantionCADataSection",
		$errorList);
end

rule "CA mandatory to be in BG"
salience 1000
when
	$errorList : ErrorList()
	Section (coreName == "application_ca")
	$designApplication: DesignApplication($contactDetails: contactDetails)
	eval ($contactDetails  != null && $contactDetails.size() > 0)
	eval (!hasAnyCAFromCountry($designApplication, "BG"))
then
    addError(null, "BR.CA.must.be.in.BG", "It is mandatory that the correspondence address is in Bulgaria", "mainForm.applicantionCADataSection", $errorList);
end

rule "BRSIG - Number of Signatories"
salience 1000
when
$errorList : ErrorList()
DesignApplication(signatures== null || (signatures!= null && signatures.size() <= 0))
Section (coreName == "signature")
then
	addError(null,
		"BRSIG.SignatoryNumber.Empty",
		"You must add at least one signatory",
		"mainForm.signatureSection",
		$errorList);
end

rule "BR Entitlement to apply - Empty"
salience 1000
when
 $errorList : ErrorList()
 Section (coreName == "entitlement_details")
 DesignApplication( $entitlement:entitlement)
 Entitlement ($kind:kind, kind==null) from $entitlement

then
	addError(null, "BREntitlement.empty", "Entitlement must be filled","mainForm.entitlementSection", $errorList);
end

rule "BR Entitlement to apply - other_grounds - Content"
salience 1000
when
 $errorList : ErrorList()
 Section (coreName == "entitlement_details")
 DesignApplication( $entitlement:entitlement)
 Entitlement ($kind:kind, kind!=null && (kind.code=="OTHER_GROUNDS" && StringUtils.isEmpty(description)))from $entitlement

then
	addError("mainForm.entitlement.otherGroundsDescription", "BRMandatory", "Entitlement must be filled","mainForm.entitlementSection", $errorList);
end


rule "Bad signature provided"
salience 1000
when
	$errorList : ErrorList()
	Section (coreName == "signature")
	DesignApplication($signedPersons: signatures)
	eval($signedPersons !=null && $signedPersons.size()>0)
then
  	for(Signatory signatory:$signedPersons){
  		if(signatory.getName() == null || signatory.getCapacity() == null || (signatory.getCapacity().toString().equals("Other") && signatory.getAssociatedText() == null)){
			addError(null, "Signatories.Bad.Signature",	"The data you have provided for the signatories is incomplete. Please check.",	"mainForm.signatureSection",	$errorList);
		}
	}
end

rule "Duplicate priorities"
salience 1000
when
	$errorList : ErrorList()
	Section (id == AvailableSection.CLAIM)
	DesignApplication( $prioList : priorities)
    eval($prioList != null && hasDuplicatePriorities($prioList))
then
    addError(null, "Duplicate.Priorities",	"You can not add more than one priority using the same country and number",	"mainForm.claimSection",	$errorList);
end

rule "Bad representative pow details provided"
salience 1000
when
	$errorList : ErrorList()
	Section (id == AvailableSection.REPRESENTATIVE)
	DesignApplication($reps: representatives)
	eval($reps != null && $reps.size() > 0)
	Representative(powValidityIndefiniteIndicator == null || (powValidityIndefiniteIndicator == false && powValidityEndDate == null) || (powValidityIndefiniteIndicator == true && powValidityEndDate != null) || powReauthorizationIndicator == null) from $reps
then
    addError(null, "Representatives.Bad.Pow.Details",	"You need to provide valid representative POA details for every representative",	"mainForm.representativeDataSection",	$errorList);
end