<?xml version="1.0" encoding="UTF-8"?>
<flow abstract="true" xmlns="http://www.springframework.org/schema/webflow"
	  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	  xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

	<on-start>
		<set name="flowScopeDetails.flowModeId" value="flowRequestContext.activeFlow.id"/>
		<evaluate
				expression="flowBeanAction.loadApplication(requestParameters.form_id, requestParameters.lid, flowScopeSession)"
				result="flowScope.flowBean" result-type="java.io.Serializable"/>
		<evaluate
				expression="requestParameters.form_id != null ? requestParameters.lid != null : false"
				result="flowScope.loaded" result-type="boolean"/>
		<evaluate expression="flowScope.flowBean.initializationErrorCode"
				  result="flashScope.error_code" />
		<evaluate expression="flowScope.flowBean.setInitializationErrorCode(null)" />
		<evaluate expression="requestParameters.timeout" result="flashScope.timeout"
				  result-type="java.io.Serializable" />
		<evaluate
				expression="flowScope.flowBean.setIdreserventity(draftApplicationService.provideProvisionalID())" />
	</on-start>

	<view-state id="savetopc" view="externalRedirect:contextRelative:saveToPC.htm?flowKey=#{requestParameters.execution}"/>
	<view-state id="printDraftReceipt" view="externalRedirect:contextRelative:receipt.htm?flowKey=#{requestParameters.execution}"/>
	<view-state id="failureState" view="failureTile" />
	<view-state id="startOverState" view="importFailureTile" />

	<end-state id="submitted" view="redirect:#{flowScope.redirectToPortal? flowScope.redirectURL : '/submitted.htm'}" >
		<on-entry>
			<evaluate result="flowScope.uuid" result-type="java.io.Serializable"
					  expression="draftApplicationService.storeSubmittedApplication(flowBean)" />
			<evaluate result="flowScope.redirectToPortal" expression="draftApplicationService.redirectToPortal(flowBean)" />
			<evaluate result="flowScope.redirectURL" expression="draftApplicationService.getRedirectUrl(flowScope.flowBean.idreserventity)"/>
		</on-entry>
	</end-state>

	<action-state id="GlobalLogin">
		<secured attributes="Login" />
		<!-- TODO: is it required for tm-efiling? -->
		<evaluate
				expression="flowScope.loaded ? null : flowBeanAction.addUserPersonDetails(flowScope.flowBean, flowScope.flowModeId)"
				result="flowScope.userPersonDetails" />
		<evaluate expression="flowScope.currentState" />
		<transition on="wizhome" to="wizhome" />
		<transition on="wiz0" to="wiz0" />
		<transition on="wiz1" to="wiz1" />
		<transition on="wiz2" to="wiz2" />
		<transition on="wiz3" to="wiz3" />
		<transition on="wiz4" to="wiz4" />
		<transition on="oneform" to="oneform" />
		<transition on="review" to="review" />
	</action-state>

	<global-transitions>
		<transition on="GlobalLogin" validate="false">
			<secured  attributes="ROLE_TMEFILING-REGISTERED" />
		</transition>

		<transition on="Cancel" validate="false">
			<evaluate expression="flowBean.clear()" />
		</transition>
		<transition on="ChangeLanguage" validate="false">
			<evaluate expression="false" />
		</transition>
		<transition on="Refresh" validate="false">
			<evaluate
					expression="personService.initializePersonsForRegisteredUsers(flowScope.flowBean, flowScope.flowModeId)" />
		</transition>
		<transition on="SaveLocally" to="savetopc" validate="false" />
		<transition on="PrintDraftReceipt" to="printDraftReceipt" validate="false" />
		<transition on="ImportCTM" to="startOverState" validate="false">
			<evaluate
					expression="importService.getTradeMark(requestParameters.officeCode, requestParameters.importCTMId, requestParameters.extraImport, flowScope.flowModeId, flowScope.flowBean)"
					result="flowScope.flowBean" />
			<evaluate expression="flowBean != null and flowBean.getFirstLang() == null"/>
		</transition>
		<transition on="ImportCTMPriority" validate="false">
			<evaluate
					expression="importService.getTradeMarkPriority(flowScope.flowBean, requestParameters.officeCode, requestParameters.importCTMId, requestParameters.extraImport, flowScope.flowModeId)"
					result="flowScope.flowBean" />
		</transition>
		<transition on="ImportCTMSeniority" validate="false">
			<evaluate
					expression="importService.getTradeMarkSeniority(flowScope.flowBean, requestParameters.officeCode, requestParameters.importCTMId, requestParameters.extraImport, flowScope.flowModeId)"
					result="flowScope.flowBean" />
		</transition>
		<transition on="ImportCTMTransformation" validate="false">
			<set name="flowScope.newBean" value="importService.getTradeMarkTransformation(flowScope.flowBean, requestParameters.officeCode, requestParameters.importCTMId, requestParameters.extraImport, flowScope.flowModeId)"/>
			<set name="flowScope.transformationImportFail" value="flowScope.newBean == null? 'yes' : 'no'" type="java.lang.String"/>
			<evaluate
					expression="flowScope.newBean == null ? flowScope.flowBean : flowScope.newBean"
					result="flowScope.flowBean" />
		</transition>

		<transition on="doPayment" validate="true" >
			<evaluate expression="true" result="flashScope.doPayment"
					  result-type="java.lang.Boolean" />
		</transition>
		<transition on="doSubmit" to="submitted" history="discard" validate="true" />
		<transition on="PAYMENT_OK" to="submitted" history="discard" validate="true" />
		<transition on="PAYMENT_CANCELLED" />
		<transition on="PAYMENT_ERROR">
			<evaluate expression="requestParameters.paymentMessage" result="flashScope.paymentMessage"
					  result-type="java.lang.String" />
		</transition>

		<transition on="ImportDivisional" validate="false">
			<set name="flowScope.newBean"
				 value="importService.getTradeMarkDivisional(flowScope.flowBean, requestParameters.officeCode, requestParameters.importCTMId, requestParameters.extraImport, flowScope.flowModeId)"
			/>
			<set name="flowScope.divisionalImportFail" value="flowScope.newBean == null? 'yes' : 'no'" type="java.lang.String"/>
			<evaluate
					expression="flowScope.newBean == null ? flowScope.flowBean : flowScope.newBean"
					result="flowScope.flowBean" />
		</transition>
	</global-transitions>

	<exception-handler bean="spFlowExecutionExceptionHandler"/>
</flow>
