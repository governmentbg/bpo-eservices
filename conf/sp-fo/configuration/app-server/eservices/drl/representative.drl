package org.domain.rules;
dialect "mvel"

import eu.ohim.sp.core.domain.person.Representative;
import eu.ohim.sp.core.domain.person.RepresentativeKind;
import eu.ohim.sp.core.domain.person.PersonKind;
import eu.ohim.sp.core.domain.person.PersonIdentifier;
import eu.ohim.sp.core.domain.validation.ErrorCore;
import eu.ohim.sp.core.domain.validation.ErrorList;

import eu.ohim.sp.core.configuration.domain.xsd.AvailableSection;
import eu.ohim.sp.core.configuration.domain.xsd.Section;
import eu.ohim.sp.core.configuration.domain.xsd.Field;
import eu.ohim.sp.core.domain.validation.RulesInformation;

import java.util.Map;
import java.util.ArrayList;

import java.util.ArrayList;

import eu.ohim.sp.core.domain.validation.ErrorCore;
import eu.ohim.sp.core.domain.validation.ErrorList;
import eu.ohim.sp.core.domain.person.Representative;
import eu.ohim.sp.core.configuration.domain.xsd.Section;
import eu.ohim.sp.core.configuration.domain.xsd.Field;
import eu.ohim.sp.core.domain.contact.Email;
import org.apache.commons.lang.*;
import eu.ohim.sp.core.domain.person.PersonRoleRelationship;
import eu.ohim.sp.core.domain.resources.AttachedDocument;
import eu.ohim.sp.core.domain.resources.Document
import java.util.HashMap
import java.util.Date;

global eu.ohim.sp.core.domain.validation.ErrorList errorList;

rule "BR910 (type mandatory)"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "type", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative(kind ==null)
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("type", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }
end

rule "BR924 (type mandatory)"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "correspondenceAddresses.correspondenceEmail", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	Representative($cemails : correspondenceEmails, $cemails != null)
	$cemail : Email(emailAddress == null || emailAddress == "") from $cemails
	eval($fieldUsable == true && $fieldRequired == true)
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("correspondenceAddresses[0].correspondenceEmail", "BR8924.email.empty", "This field is mandatory", null, $errorList);
	    }
    }
		 
end




rule "BR846 Correspondence Name - Empty"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "correspondenceAddresses.correspondenceName", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields	
	Representative($addresses : correspondenceAddresses, $addresses != null)
    $address : Address(postalName == null || postalName == "") from $addresses
    eval($fieldUsable == true && $fieldRequired == true)	
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("correspondenceAddresses[0].correspondenceName","BRMandatory","This field is mandatory", null, $errorList);
	    }
    }
end

rule "BR847 Correspondence Street - Empty"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "correspondenceAddresses.addressForm.street", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	Representative($addresses : correspondenceAddresses, $addresses != null)
	$address : Address(street == null || street == "") from $addresses
	eval($fieldUsable == true && $fieldRequired == true)
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("correspondenceAddresses[0].addressForm.street", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }
end

rule "BR818 Correspondence House Number - Empty"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "correspondenceAddresses.addressForm.houseNumber", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	Representative($addresses : correspondenceAddresses, $addresses != null)
	$address : Address(streetNumber == null || streetNumber == "") from $addresses
	eval($fieldUsable == true && $fieldRequired == true)
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("correspondenceAddresses[0].addressForm.houseNumber", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }
end

rule "BR452 Correspondence City - Empty"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "correspondenceAddresses.addressForm.city", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	Representative($addresses : correspondenceAddresses, $addresses != null)
	$address : Address(city == null || city == "") from $addresses
	eval($fieldUsable == true && $fieldRequired == true)	
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("correspondenceAddresses[0].addressForm.city", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }
end

rule "Correspondence Postalcode - Empty"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "correspondenceAddresses.addressForm.postalCode", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	Representative($addresses : correspondenceAddresses, $addresses != null)
	$address : Address(postCode == null || postCode == "") from $addresses
	eval($fieldUsable == true && $fieldRequired == true)	
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("correspondenceAddresses[0].addressForm.postalCode", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }
end

rule "BR807 Correspondence Country - Empty"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "correspondenceAddresses.addressForm.country", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	Representative($addresses : correspondenceAddresses, $addresses != null)
	$address : Address(country == null || country == "") from $addresses
	eval($fieldUsable == true && $fieldRequired == true)	  
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("correspondenceAddresses[0].addressForm.country", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }
end


rule "BR811 (firstName mandatory (natural person))"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "firstName", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative(representativeKind != null && !representativeKind.equals(RepresentativeKind.ASSOCIATION),
	        (name != null && StringUtils.isEmpty(name.firstName) == true)  || (name==null))
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("firstName", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }
end

rule "BR832 (middleName mandatory (natural person))"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "middleName", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative((name != null && StringUtils.isEmpty(name.middleName) == true) || (name==null))
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("middleName", "BR811.representative.middleName.empty", "This field is mandatory", null, $errorList);
	    }
    }
end


rule "BR812 (surname mandatory (natural person))"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "surname", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative(representativeKind != null && !representativeKind.equals(RepresentativeKind.ASSOCIATION),
	        (name != null && StringUtils.isEmpty(name.lastName) == true)  || (name==null))
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("surname", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }
end

rule "BR812 (association name mandatory (association))"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "associationName", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative(representativeKind != null && (representativeKind.equals(RepresentativeKind.ASSOCIATION) ||representativeKind.equals(RepresentativeKind.LAWYER_ASSOCIATION)),
	        (name != null && StringUtils.isEmpty(name.organizationName) == true)  || (name==null))
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("associationName", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }
end

rule "BR818 (city mandatory)"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "address.city", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative(addresses == null || (addresses != null && addresses.get(0) != null && StringUtils.isEmpty(addresses.get(0).city) == true))	  
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("address.city", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }
end

rule "BR820 (country mandatory)"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "address.country", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative(addresses == null || (addresses != null && addresses.get(0) != null && StringUtils.isEmpty(addresses.get(0).country) == true))	  
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("address.country", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }
end

rule "BR817 (postal code mandatory)"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "address.postalCode", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative(addresses == null || (addresses != null && addresses.get(0) != null && StringUtils.isEmpty(addresses.get(0).postCode) == true))	  

then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("address.postalCode", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }
end

rule "BR (postal code format)"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "address.postalCode", $fieldUsable : usable, $fieldRequired : required, $regex: ".{1,15}") from $fields
	eval($fieldUsable == true)
	Representative(addresses != null && addresses.size() >0 && StringUtils.isNotEmpty(addresses.get(0).postCode) && addresses.get(0).postCode not matches $regex)
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRFormat", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("address.postalCode", "BRFormat", "This field has bad format", null, $errorList);
	    }
    }
end

rule "BR816a (street mandatory)"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "address.street", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative(addresses == null || (addresses != null && addresses.size()>0 && addresses.get(0) != null && StringUtils.isEmpty(addresses.get(0).street) == true))	  
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("address.street", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }
end

rule "BR816b (house number mandatory)"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "address.houseNumber", $fieldVisible : visible, $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldVisible == true && $fieldUsable == true && $fieldRequired == true)
	Representative(addresses == null || (addresses != null && addresses.size()>0 && addresses.get(0) != null &&  StringUtils.isEmpty(addresses.get(0).streetNumber) == true))	  
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("address.houseNumber", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }
end


rule "BR814 (organization name mandatory (legal entity))"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "nameOfLegalEntity", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative((name==null) ||(name != null && StringUtils.isEmpty(name.organizationName) == true))
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("nameOfLegalEntity", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }
end

rule "BR815 (organization registration number mandatory (legal entity))"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "businessVatNumber", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative(identifiers == null || (identifiers != null && identifiers.size() == 0))
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("businessVatNumber", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }
end

/* association */
rule "Assoc (Name mandatory)"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "name", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative((name != null && StringUtils.isEmpty(name.organizationName) == true) || (name==null))
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("name", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }
end

rule "Assoc (Domicile mandatory)"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "domicile", $fieldVisible : visible, $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldVisible == true && $fieldUsable == true && $fieldRequired == true)
	Representative((domicileLocality != null && StringUtils.isEmpty(domicileLocality) == true) || (domicileLocality==null))
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("domicile", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }
end

rule "Assoc (Domicile country mandatory)"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "countryOfDomicile", $fieldVisible : visible, $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldVisible == true && $fieldUsable == true && $fieldRequired == true)
	Representative((domicileCountry != null && StringUtils.isEmpty(domicileCountry) == true) || (domicileCountry==null))
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("countryOfDomicile", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }
end

rule "Assoc (Nationality)"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "nationality", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative((nationality != null && StringUtils.isEmpty(nationality) == true) || (nationality==null))
then

        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("nationality", "BRMandatory", "This field is mandatory", null, $errorList);
	    }

end

rule "Assoc (Emails - null)"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "email", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative($cemails : emails, $cemails == null)
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("email", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }
end

rule "Assoc (Emails - empty)"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "email", $fieldUsable : usable, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true && $fieldRequired == true)
	Representative($cemails : emails, $cemails != null)
	$cemail : Email(emailAddress == null || emailAddress == "") from $cemails
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("email", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }

end

rule "Assoc (Emails - format)"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "email", $fieldUsable : usable, $regex : format, $fieldRequired : required, $editableImportField : editableImport) from $fields
	eval($fieldUsable == true)
	$person: Representative($cemails : emails, $cemails != null, $representativeKind: representativeKind, $personKind: kind)
	$cemail : Email(emailAddress != null && emailAddress not matches $regex) from $cemails
	eval(shouldValidateRepresentativeEmail($representativeKind, $personKind))
then

    if($sectionValidation){
        addError(null, "BRFormat.email", "Email field has bad format", "mainForm.personalDataSection", $errorList);
        addError(null, $person.name.fullName, $person.name.fullName, "mainForm.personalDataSection", $errorList);
    } else {
        addError("email", "BRFormat", "This field has a wrong format", null, $errorList);
    }
end

rule "Attachment mandatory when attached POW option selected"
salience 1000
when
    $errorList : ErrorList()
    RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
    Field( id == "representativeAttachment", $fieldUsable : usable) from $fields
    Field( id == "representativeAttachment.attachment", $fieldAttachmentUsable : usable, $fieldAttachmentRequired: required) from $fields
    Field( id == "representativeAttachment.provided", $fieldProvidedUsable : usable, $fieldProvidedRequired: required) from $fields
    eval($fieldUsable == true && ($fieldAttachmentUsable == true || $fieldProvidedUsable == true))
    Representative($relationships: personRoleRelationships)
    PersonRoleRelationship(documents != null && documents.size() > 0 && documents.get(0).getDocument() != null && documents.get(0).getDocument().getStatus() != null &&
        documents.get(0).getDocument().getStatus() == "Attached" && documents.get(0).getDocument().getDocumentId() == null) from $relationships
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
            addError("representativeAttachment.attachment", "representative.pow.mandatory", "It is mandatory to attach a POW if you select that you will attach one", null, $errorList);
        }
    }
end

rule "Mandatory to select attachment option"
salience 1000
when
    $errorList : ErrorList()
    RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
    Field( id == "representativeAttachment", $fieldUsable : usable) from $fields
    Field( id == "representativeAttachment.attachment", $fieldAttachmentUsable : usable, $fieldAttachmentRequired: required) from $fields
    Field( id == "representativeAttachment.provided", $fieldProvidedUsable : usable, $fieldProvidedRequired: required) from $fields
    eval($fieldUsable == true && ($fieldAttachmentUsable || $fieldProvidedUsable))
    Representative(personRoleRelationships == null || personRoleRelationships.size() ==0)
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
            addError("representativeAttachment.attachment", "representative.pow.choose.option", "It is mandatory choose POW option", null, $errorList);
        }
    }
end

rule "BR832 (firstName format (BG nationality))"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "firstName", $fieldUsable : usable, $editableImportField : editableImport, $regex: format) from $fields
	Field( id == "nationality", $fieldUsableNationality : usable) from $fields
	eval($fieldUsable && $fieldUsableNationality && StringUtils.isNotEmpty($regex))
	Representative(name != null && StringUtils.isEmpty(name.firstName) == false && nationality != null && nationality == "BG" && name.firstName not matches $regex)
then

        if($sectionValidation){
            addError(null, "BRFormat.firstName", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("firstName", "BRFormat.firstName", "Bad format of first name", null, $errorList);
	    }

end

rule "BR832 (middleName required (BG nationality))"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "middleName", $fieldUsable : usable, $editableImportField : editableImport, $regex: format) from $fields
	Field( id == "nationality", $fieldUsableNationality : usable) from $fields
	eval($fieldUsable && $fieldUsableNationality)
	Representative(((name != null && StringUtils.isEmpty(name.middleName) == true) || name.middleName == null) && nationality != null && nationality == "BG")
then
    if(($imported && $validateImport) || !$imported){
        if($sectionValidation){
            addError(null, "BRMandatory", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("middleName", "BRMandatory", "This field is mandatory", null, $errorList);
	    }
    }
end

rule "BR832 (middleName format (BG nationality))"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "middleName", $fieldUsable : usable, $editableImportField : editableImport, $regex: format) from $fields
	Field( id == "nationality", $fieldUsableNationality : usable) from $fields
	eval($fieldUsable && $fieldUsableNationality && StringUtils.isNotEmpty($regex))
	Representative(name != null && StringUtils.isEmpty(name.middleName) == false && nationality != null && nationality == "BG" && name.middleName not matches $regex)
then

        if($sectionValidation){
            addError(null, "BRFormat.middleName", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("middleName", "BRFormat.middleName", "Bad format of middle name", null, $errorList);
	    }

end

rule "BR832 (lastName format (BG nationality))"
salience 1000
when
	$errorList : ErrorList()
	RulesInformation($sectionValidation: customObjects["isSectionValidation"], $imported: customObjects["imported"])
    Section( $fields : field, $validateImport: (isValidateImport() != null && isValidateImport()) )
	Field( id == "surname", $fieldUsable : usable, $editableImportField : editableImport, $regex: format) from $fields
	Field( id == "nationality", $fieldUsableNationality : usable) from $fields
	eval($fieldUsable && $fieldUsableNationality && StringUtils.isNotEmpty($regex))
	Representative(name != null && StringUtils.isEmpty(name.lastName) == false && nationality != null && nationality == "BG" && name.lastName not matches $regex)
then

        if($sectionValidation){
            addError(null, "BRFormat.lastName", "This field is mandatory", "mainForm.personalDataSection", $errorList);
        } else {
	        addError("surname", "BRFormat.lastName", "Bad format of last name", null, $errorList);
	    }

end

rule "BR (Company  number depending on country)"
salience 1000
when
    $errorList : ErrorList()
    Section( $fields : field, $validateImport : validateImport)
    $rulesInformation : RulesInformation($customObjects : customObjects )
    Field( id == "nationalOfficialBusinessRegister", $fieldUsable : usable, $editableImportField : editableImport) from $fields
    Field( id == "address.country", $fieldUsableCountry : usable) from $fields
    eval($fieldUsable && $fieldUsableCountry)
    Representative(identifiers != null && addresses != null && addresses.size() >0 && addresses.get(0).country != null && addresses.get(0).country != "BG", $ids: identifiers)
    PersonIdentifier($idKind: identifierKindCode, identifierKindCode != null && identifierKindCode == "Company Number" &&
        value != null && !value.isEmpty()) from $ids
then
    HashMap co = $customObjects;
    Boolean imported = co.get("imported");
    Boolean isSectionValidation = co.get("isSectionValidation");

     if ((imported == false || $validateImport == true) && isSectionValidation == false){
    	addError("nationalOfficialBusinessRegister", "BR.nationalOfficialBusinessRegister.onlyForBG", "This field should be filled only for BG companies", null, $errorList);
    } else if((imported == false || $validateImport == true) && isSectionValidation == true){
        addError(null, "BR.nationalOfficialBusinessRegister.onlyForBG", "This field should be filled only for BG companies", "mainForm.personalDataSection", $errorList);
    }
end

rule "BR (Company  number not valid)"
salience 1000
when
    $errorList : ErrorList()
    Section( $fields : field, $validateImport : validateImport)
    $rulesInformation : RulesInformation($customObjects : customObjects )
    Field( id == "nationalOfficialBusinessRegister", $fieldUsable : usable, $editableImportField : editableImport) from $fields
    eval($fieldUsable)
    Representative(identifiers != null, $ids: identifiers)
    PersonIdentifier($idKind: identifierKindCode, identifierKindCode != null && identifierKindCode == "Company Number" &&
        value != null && !value.isEmpty()) from $ids
then
    HashMap co = $customObjects;
    Boolean imported = co.get("imported");
    Boolean isSectionValidation = co.get("isSectionValidation");
    Boolean companyIdIsValid = co.get("companyIdIsValid");

    if(!companyIdIsValid){
         if ((imported == false || $validateImport == true) && isSectionValidation == false){
            addError("nationalOfficialBusinessRegister", "BR.nationalOfficialBusinessRegister.invalid", "Invalid company id", null, $errorList);
        } else if((imported == false || $validateImport == true) && isSectionValidation == true){
            addError(null, "BR.nationalOfficialBusinessRegister.invalid", "Invalid company id", "mainForm.personalDataSection", $errorList);
        }
    }
end

rule "BR Representative POW validity end date - Content"
salience 1000
when
    $errorList : ErrorList()
    Section( $fields : field)
    Field( id == "powValidityEndDate", $fieldUsable : usable, $editableImportField : editableImport) from $fields
    eval($fieldUsable == true && $editableImportField == true)
    Representative($powValidityEndDate : powValidityEndDate, powValidityEndDate != null)
    $rulesInformation : RulesInformation($customObjects : customObjects)
then
    HashMap co = $customObjects;
	Boolean isSectionValidation = co.get("isSectionValidation");
	Date currentDate = new Date();

	if(currentDate.compareTo($powValidityEndDate) > 0){
        if (isSectionValidation == false){
            addError("powValidityEndDate", "BR.powValidityEndDate", "POW validity date can not be in the past",  null, $errorList);
        }else if(isSectionValidation == true){
            addError(null, "BR.powValidityEndDate", "POW validity date can not be in the past", "mainForm.representativeDataSection", $errorList);
        }
    }
end

rule "BR pow validity end date - Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field )
	Field( id == "powValidityEndDate", $fieldUsable : usable ) from $fields
	Field( id == "powValidityIndefiniteIndicator", $fieldIndicatorUsable : usable ) from $fields
	Representative(powValidityEndDate==null && (powValidityIndefiniteIndicator == null || powValidityIndefiniteIndicator == false))
	eval($fieldUsable == true && $fieldIndicatorUsable == true)
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if (isSectionValidation == false){
		addError("powValidityEndDate", "BR.Enter.Date.Or.Select.Indefinite", "This field is mandatory", null, $errorList);
	}
end

rule "BR pow validity end date - NOT Empty"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field )
	Field( id == "powValidityEndDate", $fieldUsable : usable ) from $fields
	Field( id == "powValidityIndefiniteIndicator", $fieldIndicatorUsable : usable ) from $fields
	Representative(powValidityEndDate !=null && (powValidityIndefiniteIndicator != null && powValidityIndefiniteIndicator == true))
	eval($fieldUsable == true && $fieldIndicatorUsable == true)
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if (isSectionValidation == false){
		addError("powValidityEndDate", "BR.Must.Not.Have.Date.For.Indefinite", "You must not fill in validity end date if the POA is indefinite", null, $errorList);
	}
end

rule "BR pow reauthorization indicator"
salience 1000
when
	$errorList : ErrorList()
	Section( $fields : field )
	Field( id == "powReauthorizationIndicator", $fieldUsable : usable) from $fields
	eval($fieldUsable == true)
	Representative(powReauthorizationIndicator == null)
	$rulesInformation : RulesInformation($customObjects : customObjects )
then
	HashMap co = $customObjects;
	Boolean imported = co.get("imported");
	Boolean isSectionValidation = co.get("isSectionValidation");

	if (isSectionValidation == false){
		addError("powReauthorizationIndicator", "BRMandatory.Select.One", "This field is mandatory", null, $errorList);
	}
end