# Loads the module
LoadModule jk_module ${APACHE_CONF_LOCATION}/mod_jk-1.2.31-httpd-2.2.x.so

# Specify the path to worker configuration files
JkWorkersFile ${APACHE_CONF_LOCATION}/workers.properties

# Configure logging and memory
JkShmFile /etc/httpd/logs/mod_jk.shm
JkLogFile ${APACHE_LOG_LOCATION}/mod_jk.log
JkLogLevel info

# configure monitoring
JkMountCopy On

#increase timeout
Timeout 600

# This is the Apache server configuration file providing SSL support.
# It contains the configuration directives to instruct the server how to
# serve pages over an https connection. For detailing information about these 
# directives see <URL:http://httpd.apache.org/docs/2.2/mod/mod_ssl.html>
# 
LoadModule ssl_module modules/mod_ssl.so


Listen ${APACHE_HTTPS_PORT}

##  SSL Global Context
##
##  All SSL configuration in this context applies both to
##  the main server and all SSL-enabled virtual hosts.
##

#   Pass Phrase Dialog:
#   Configure the pass phrase gathering process.
#   The filtering dialog program (`builtin' is a internal
#   terminal dialog) has to provide the pass phrase on stdout.
SSLPassPhraseDialog  builtin

#   Inter-Process Session Cache:
#   Configure the SSL Session Cache: First the mechanism 
#   to use and second the expiring timeout (in seconds).
SSLSessionCache         shmcb:/var/cache/mod_ssl/scache(512000)
SSLSessionCacheTimeout  300

#   Semaphore:
#   Configure the path to the mutual exclusion semaphore the
#   SSL engine uses internally for inter-process synchronization. 
SSLMutex default

#   Pseudo Random Number Generator (PRNG):
#   Configure one or more sources to seed the PRNG of the 
#   SSL library. The seed data should be of good random quality.
#   WARNING! On some platforms /dev/random blocks if not enough entropy
#   is available. This means you then cannot use the /dev/random device
#   because it would lead to very long connection times (as long as
#   it requires to make more entropy available). But usually those
#   platforms additionally provide a /dev/urandom device which doesn't
#   block. So, if available, use this one instead. Read the mod_ssl User
#   Manual for more details.
SSLRandomSeed startup file:/dev/urandom  256
SSLRandomSeed connect builtin
#SSLRandomSeed startup file:/dev/random  512
#SSLRandomSeed connect file:/dev/random  512
#SSLRandomSeed connect file:/dev/urandom 512

#
# Use "SSLCryptoDevice" to enable any supported hardware
# accelerators. Use "openssl engine -v" to list supported
# engine names.  NOTE: If you enable an accelerator and the
# server does not start, consult the error logs and ensure
# your accelerator is functioning properly. 
#
SSLCryptoDevice builtin
#SSLCryptoDevice ubsec

##
## SSL Virtual Host Context
##

### Mod_jk configuration
# --------------------------------------------------------------------------


# Configure applications
<VirtualHost *:${APACHE_HTTP_PORT}>

        ServerName ${APACHE_SERVER_NAME}:${APACHE_HTTP_PORT}
        Redirect permanent / https://${APACHE_HOST}:${APACHE_HTTPS_PORT}/

</VirtualHost>

<VirtualHost *:${APACHE_HTTPS_PORT}>

        #   SSL Engine Switch:
        #   Enable/Disable SSL for this virtual host.
        SSLEngine on

        #   SSL Protocol support:
        # List the enable protocol levels with which clients will be able to
        # connect.  Disable SSLv2 access by default:
        SSLProtocol all -SSLv2

        #   SSL Cipher Suite:
        # List the ciphers that the client is permitted to negotiate.
        # See the mod_ssl documentation for a complete list.
        SSLCipherSuite ALL:!ADH:!EXPORT:!SSLv2:RC4+RSA:+HIGH:+MEDIUM:+LOW

        #   Server Certificate:
        # Point SSLCertificateFile at a PEM encoded certificate.  If
        # the certificate is encrypted, then you will be prompted for a
        # pass phrase.  Note that a kill -HUP will prompt again.  A new
        # certificate can be generated using the genkey(1) command.
        SSLCertificateFile ${APACHE_SSL_CERTIF_FILE}

        #   Server Private Key:
        #   If the key is not combined with the certificate, use this
        #   directive to point at the key file.  Keep in mind that if
        #   you've both a RSA and a DSA private key you can configure
        #   both in parallel (to also allow the use of DSA ciphers, etc.)
        SSLCertificateKeyFile ${APACHE_SSL_CERTIF_FILE_KEY}

        ServerName ${APACHE_SERVER_NAME}:${APACHE_HTTPS_PORT}

        DocumentRoot "${APACHE_STATIC_CONTENT_PATH}"
        
 
        # Contents GZIPing
        AddOutputFilterByType DEFLATE text/plain text/html text/css text/javascript application/x-javascript

     
        # Static files in all Tomcat webapp context directories
        
        JkStripSession On
        

        # pass all dynamic content to Tomcat
        JkMount /sp-ui-*/* ${SP_LB_NAME}

        # unmount all static content to Tomcat
        #css
        JkUnMount /sp-ui-*/resources*/*.css ${SP_LB_NAME}
        # fonts
        JkUnMount /sp-ui-*/resources*/*.eot ${SP_LB_NAME}
        JkUnMount /sp-ui-*/resources*/*.woff ${SP_LB_NAME}
        JkUnMount /sp-ui-*/resources*/*.ttf ${SP_LB_NAME}
        #img
        JkUnMount /sp-ui-*/resources*/*.gif ${SP_LB_NAME}
        JkUnMount /sp-ui-*/resources*/*.png ${SP_LB_NAME}
        JkUnMount /sp-ui-*/resources*/*.jpg ${SP_LB_NAME}
        JkUnMount /sp-ui-*/resources*/*.jpeg ${SP_LB_NAME}
        #scripts
        JkUnMount /sp-ui-*/resources*/*.js ${SP_LB_NAME}

        ErrorLog ${APACHE_LOG_LOCATION}/spconsolidationError.log

        # Security - limit TRACE
        TraceEnable off

</VirtualHost>
