
package eu.ohim.sp.external.person.outside.ws.client.applicant;

import eu.ohim.sp.external.domain.common.Result;
import eu.ohim.sp.external.domain.person.Applicant;
import eu.ohim.sp.external.person.outside.ws.client.person.PersonWSClient;
import eu.ohim.sp.external.ws.exception.ApplicantFaultException;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.ws.BindingType;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import javax.xml.ws.soap.SOAPBinding;
import java.util.List;

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-b01-
 * Generated source version: 2.1
 * 
 */
@WebService(name = ApplicantClientWSService.SERVICE_NAME, targetNamespace = ApplicantClientWSService.SERVICE_NAMESPACE)
@BindingType(SOAPBinding.SOAP12HTTP_BINDING)
public interface ApplicantClientWS {


    /**
     * 
     * @param module
     * @param office
     * @param applicant
     * @param numberOfResults
     * @return
     *     returns java.util.List<eu.ohim.sp.external.services.applicant.Applicant>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "matchApplicant", targetNamespace = ApplicantClientWSService.SERVICE_NAMESPACE, className = "MatchApplicant")
    @ResponseWrapper(localName = "matchApplicantResponse", targetNamespace = ApplicantClientWSService.SERVICE_NAMESPACE, className = "MatchApplicantResponse")
    List<Applicant> matchApplicant(
        @WebParam(name = PersonWSClient.MODULE, targetNamespace = PersonWSClient.PERSON_NAMESPACE)
        String module,
        @WebParam(name = PersonWSClient.OFFICE, targetNamespace = PersonWSClient.PERSON_NAMESPACE)
        String office,
        @WebParam(name = "applicant", targetNamespace = "")
        Applicant applicant,
        @WebParam(name = "numberOfResults", targetNamespace = "")
        int numberOfResults) throws ApplicantFaultException;

    /**
     * 
     * @param module
     * @param office
     * @param user
     * @param applicant
     * @return
     *     returns eu.ohim.sp.external.services.applicant.Result
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "saveApplicant", targetNamespace = ApplicantClientWSService.SERVICE_NAMESPACE, className = "SaveApplicant")
    @ResponseWrapper(localName = "saveApplicantResponse", targetNamespace = ApplicantClientWSService.SERVICE_NAMESPACE, className = "SaveApplicantResponse")
    Result saveApplicant(
        @WebParam(name = PersonWSClient.MODULE, targetNamespace = PersonWSClient.PERSON_NAMESPACE)
        String module,
        @WebParam(name = PersonWSClient.OFFICE, targetNamespace = PersonWSClient.PERSON_NAMESPACE)
        String office,
        @WebParam(name = "user", targetNamespace = "")
        String user,
        @WebParam(name = "applicant", targetNamespace = "")
        Applicant applicant) throws ApplicantFaultException;

    /**
     * 
     * @param module
     * @param office
     * @param applicantId
     * @return
     *     returns eu.ohim.sp.external.services.applicant.Applicant
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getApplicant", targetNamespace = ApplicantClientWSService.SERVICE_NAMESPACE, className = "GetApplicant")
    @ResponseWrapper(localName = "getApplicantResponse", targetNamespace = ApplicantClientWSService.SERVICE_NAMESPACE, className = "GetApplicantResponse")
    Applicant getApplicant(
        @WebParam(name = PersonWSClient.MODULE, targetNamespace = PersonWSClient.PERSON_NAMESPACE)
        String module,
        @WebParam(name = PersonWSClient.OFFICE, targetNamespace = PersonWSClient.PERSON_NAMESPACE)
        String office,
        @WebParam(name = "applicantId", targetNamespace = "")
        String applicantId) throws ApplicantFaultException;

    /**
     * 
     * @param module
     * @param office
     * @param applicantId
     * @param applicantName
     * @param applicantCountry
     * @param numberOfResults
     * @return
     *     returns java.util.List<eu.ohim.sp.external.services.applicant.Applicant>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchApplicant", targetNamespace = ApplicantClientWSService.SERVICE_NAMESPACE, className = "SearchApplicant")
    @ResponseWrapper(localName = "searchApplicantResponse", targetNamespace = ApplicantClientWSService.SERVICE_NAMESPACE, className = "SearchApplicantResponse")
    List<Applicant> searchApplicant(
        @WebParam(name = PersonWSClient.MODULE, targetNamespace = PersonWSClient.PERSON_NAMESPACE)
        String module,
        @WebParam(name = PersonWSClient.OFFICE, targetNamespace = PersonWSClient.PERSON_NAMESPACE)
        String office,
        @WebParam(name = "applicantId", targetNamespace = "")
        String applicantId,
        @WebParam(name = "applicantName", targetNamespace = "")
        String applicantName,
        @WebParam(name = "applicantCountry", targetNamespace = "")
        String applicantCountry,
        @WebParam(name = "numberOfResults", targetNamespace = "")
        int numberOfResults) throws ApplicantFaultException;

    /**
     * 
     * @param module
     * @param office
     * @param text
     * @param numberOfRows
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getApplicantAutocomplete", targetNamespace = ApplicantClientWSService.SERVICE_NAMESPACE, className = "GetApplicantAutocomplete")
    @ResponseWrapper(localName = "getApplicantAutocompleteResponse", targetNamespace = ApplicantClientWSService.SERVICE_NAMESPACE, className = "GetApplicantAutocompleteResponse")
    String getApplicantAutocomplete(
        @WebParam(name = PersonWSClient.MODULE, targetNamespace = PersonWSClient.PERSON_NAMESPACE)
        String module,
        @WebParam(name = PersonWSClient.OFFICE, targetNamespace = PersonWSClient.COMMON_NAMESPACE)
        String office,
        @WebParam(name = "text", targetNamespace = PersonWSClient.COMMON_NAMESPACE)
        String text,
        @WebParam(name = "numberOfRows", targetNamespace = PersonWSClient.COMMON_NAMESPACE)
        int numberOfRows) throws ApplicantFaultException;

}
