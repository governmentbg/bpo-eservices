
package eu.ohim.sp.external.user.outside.ws.client;

import eu.ohim.sp.external.domain.user.UserGroup;
import eu.ohim.sp.external.domain.user.UserRole;
import eu.ohim.sp.external.services.user.GetUser;
import eu.ohim.sp.external.services.user.GetUserResponse;
import eu.ohim.sp.external.services.user.SearchUser;
import eu.ohim.sp.external.services.user.SearchUserResponse;
import eu.ohim.sp.external.ws.exception.UserFaultException;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.ws.BindingType;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import java.util.List;

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-b01-
 * Generated source version: 2.1
 * 
 */
@WebService(name = UserWSClientService.SERVICE_NAME, targetNamespace = UserWSClientService.SERVICE_NAMESPACE)
@BindingType(javax.xml.ws.soap.SOAPBinding.SOAP12HTTP_BINDING)
public interface UserWSClient {

    String PARAMETERS = "parameters";

    /**
     * Search user.
     *
     * @param parameters
     * @return
     *     returns SearchUserResponse
     * @throws eu.ohim.sp.external.ws.exception.UserFaultException
     */
    @WebMethod
    @WebResult(name = "searchUserResponse", targetNamespace = UserWSClientService.SERVICE_NAMESPACE, partName = PARAMETERS)
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    SearchUserResponse searchUser(
            @WebParam(name = "searchUser", targetNamespace = UserWSClientService.SERVICE_NAMESPACE, partName = PARAMETERS)
            SearchUser parameters)
            throws UserFaultException
            ;

    /**
     *
     * @param parameters
     * @return
     *     returns GetUserResponse
     * @throws UserFaultException
     */
    @WebMethod
    @WebResult(name = "getUserResponse", targetNamespace = UserWSClientService.SERVICE_NAMESPACE, partName = PARAMETERS)
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    GetUserResponse getUser  (
        @WebParam(name = "getUser", targetNamespace = UserWSClientService.SERVICE_NAMESPACE, partName = PARAMETERS)
        GetUser parameters)
        throws UserFaultException
    ;

    /**
     * Gets the all roles.
     *
     * @return the all roles
     * @throws UserFaultException the user fault exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllRoles", targetNamespace = UserWSClientService.SERVICE_NAMESPACE, className = "GetAllRoles")
    @ResponseWrapper(localName = "getAllRolesResponse", targetNamespace = UserWSClientService.SERVICE_NAMESPACE, className = "GetAllRolesResponse")
    List<UserRole> getAllRoles(
            @WebParam(name = "module", targetNamespace = "")
            String module,
            @WebParam(name = "office", targetNamespace = "")
            String office) throws UserFaultException;
    
    /**
     * Gets the all groups.
     *
     * @return the all groups
     * @throws UserFaultException the user fault exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllGroups", targetNamespace = UserWSClientService.SERVICE_NAMESPACE, className = "GetAllGroups")
    @ResponseWrapper(localName = "getAllGroupsResponse", targetNamespace = UserWSClientService.SERVICE_NAMESPACE, className = "GetAllGroupsResponse")
    List<UserGroup> getAllGroups(
            @WebParam(name = "module", targetNamespace = "")
            String module,
            @WebParam(name = "office", targetNamespace = "")
            String office) throws UserFaultException;
}
