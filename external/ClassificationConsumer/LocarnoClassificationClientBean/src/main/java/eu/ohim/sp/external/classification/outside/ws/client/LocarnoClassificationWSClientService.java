package eu.ohim.sp.external.classification.outside.ws.client;

import org.apache.log4j.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-b01-
 * Generated source version: 2.1
 */
@WebServiceClient(name = LocarnoClassificationWSClientService.SERVICE_NAME, targetNamespace = LocarnoClassificationWSClientService.SERVICE_NAMESPACE, wsdlLocation = "wsdl/LocarnoClassificationService.wsdl")
public class LocarnoClassificationWSClientService extends Service {

	private static final Logger LOGGER = Logger.getLogger(LocarnoClassificationWSClientService.class);

    protected static final String SERVICE_NAMESPACE = "http://ohim.eu/sp/services/locarno-classification/v3";
    protected static final String SERVICE_NAME = "LocarnoClassificationService";
    protected static final String PORT_NAME = "LocarnoClassificationPort";

    public LocarnoClassificationWSClientService(URL url) {
		super(url,  new QName(SERVICE_NAMESPACE, SERVICE_NAME));
        LOGGER.debug("Connecting to : " + url);
	}

	/**
	 * @return returns ManageLocarnoClassificationWS
	 */
	@WebEndpoint(name = PORT_NAME)
	public LocarnoClassificationWSClient getManageLocarnoClassificationPort() {
		return super.getPort(new QName(SERVICE_NAMESPACE, PORT_NAME), LocarnoClassificationWSClient.class);
	}

	/**
	 * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
	 * @return returns ManageLocarnoClassificationWS
	 */
	@WebEndpoint(name = PORT_NAME)
	public LocarnoClassificationWSClient getManageLocarnoClassificationPort(WebServiceFeature... features) {
		return super.getPort(new QName(SERVICE_NAMESPACE, PORT_NAME), LocarnoClassificationWSClient.class, features);
	}

}
