package eu.ohim.sp.external.resource.outside.ws.client;

import org.apache.log4j.Logger;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-b01-
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = ResourceClientWSService.SERVICE_NAME, targetNamespace = ResourceClientWSService.SERVICE_NAMESPACE, wsdlLocation = "wsdl/ResourceService.wsdl")
public class ResourceClientWSService extends Service {

    private static final Logger LOGGER = Logger.getLogger(ResourceClientWSService.class);

    protected static final String SERVICE_NAMESPACE = "http://ohim.eu/sp/services/resource/v3";
    protected static final String SERVICE_NAME = "ResourceService";
    protected static final String PORT_NAME = "ResourceServicePort";

    /**
     * Constructor that requires the url that provides the web service
     * @param url the location of the connected web service that is wsdl link
     */
    public ResourceClientWSService(URL url) {
        super(url, new QName(SERVICE_NAMESPACE, SERVICE_NAME));
        LOGGER.debug("Connecting to : " + url);
    }

    /**
     * 
     * @return
     *     returns ResourceManagementWS
     */
    @WebEndpoint(name = PORT_NAME)
    public ResourceClientWS getManageResourcePort() {
        return super.getPort(new QName(SERVICE_NAMESPACE, PORT_NAME), ResourceClientWS.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ResourceManagementWS
     */
    @WebEndpoint(name = PORT_NAME)
    public ResourceClientWS getManageResourcePort(WebServiceFeature... features) {
        return super.getPort(new QName(SERVICE_NAMESPACE, PORT_NAME), ResourceClientWS.class, features);
    }

}
